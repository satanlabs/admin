{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","views/expenses/Location.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","localStorage","logsEnabled","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","copyStringToClipboard","someStr","navigator","clipboard","writeText","findCostPer","quantity","amount","perQuantity","final","concat","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","Component","render","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","FailureModal","ModalFooter","Button","onClick","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","FILE_NAME","initialState","isLoaded","loadingModalVisible","failureModalVisible","locationListData","tableColumnData","accessorKey","header","enableEditing","Cell","_ref","renderedCellValue","row","moment","zone","format","_ref2","Location","constructor","super","submitCreateLocationForm","event","preventDefault","reqData","name","target","inputName","value","description","inputDescription","latLong","inputLatLong","googlePlusCode","inputGooglePlusCode","city","inputCity","state","inputState","country","inputCountry","setState","callCreateLocationApi","JSON","parse","stringify","resetStateToDefault","reloadData","fetchLocationDataList","componentDidMount","document","title","API_URL","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","Error","code","error","newLocation","CButton","MaterialReactTable","density","columns","enablePagination","editingMode","onEditingRowSave","exitEditingMode","handleSaveRowEdits","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroup","CInputGroupPrepend","CInputGroupText","CIcon","CInput","placeholder","autoComplete","type","step","label","required","xs"],"mappings":"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","file":"static/js/26.8d7d2c86.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    if(localStorage.logsEnabled !== 'true') \n        return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nconst copyStringToClipboard = (someStr) => {\n    //console.log('copyStringToClipboard() : someStr = ', someStr);\n    // alert('clipboard added = ' + someStr);\n    navigator.clipboard.writeText(someStr);\n}\n\nconst findCostPer = (quantity, amount, perQuantity) => {\n    const final = ( amount / quantity ) * perQuantity;\n    console.log(`quantity = ${quantity}, amount = ${amount}, perQuantity = ${perQuantity}, final = ${final}`);\n    return final;\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById,\n    copyStringToClipboard,\n    findCostPer\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { requestHeaderDELETEWithAuth, requestHeaderGETWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, getSearchResult, openPageInNewTab, reloadPage, goHome } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport Table from 'react-bootstrap/Table';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,\n    CTextarea\n  } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport { brandSet } from '@coreui/icons';\nimport MaterialReactTable from 'material-react-table';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\n\n//default\nconst FILE_NAME = \"Location.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    locationListData: []\n};\n\nconst tableColumnData = [\n    {\n        accessorKey: 'id',\n        header: 'ID',\n        enableEditing: false,\n    },\n    {\n        accessorKey: 'name',\n        header: 'Name',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'description',\n        header: 'Description',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'latLong',\n        header: 'Lat-Long',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'googlePlusCode',\n        header: 'Google Plus Code',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'city',\n        header: 'city',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'state',\n        header: 'state',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'country',\n        header: 'country',\n        enableEditing: true,\n    },\n    \n    {\n        accessorKey: 'createdAt',\n        header: 'Created At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n    {\n        accessorKey: 'updatedAt',\n        header: 'Updated At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n];\n\n\nclass Location extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchLocationDataList();\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Expenses - Location\";\n        this.fetchLocationDataList();\n    }\n\n    fetchLocationDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/location/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        isLoaded: true,\n                        locationListData: result.data\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    submitCreateLocationForm = (event) => {\n        event.preventDefault();\n        \n        let reqData = {\n            name: event.target.inputName.value,\n            description: event.target.inputDescription.value,\n            latLong: event.target.inputLatLong.value,\n            googlePlusCode: event.target.inputGooglePlusCode.value,\n            city: event.target.inputCity.value,\n            state: event.target.inputState.value,\n            country: event.target.inputCountry.value\n        };\n\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n\n        this.callCreateLocationApi(reqData);\n    }\n\n    //todo: - arsh - https://igod.gov.in/sg/district/states\n    callCreateLocationApi(newLocation) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/location/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newLocation), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callCreateLocationApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callCreateLocationApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (\n            this.state.isLoaded ? \n            <div>\n                <h1>LOCATION &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                    <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                </h1>\n                <br />\n\n                {\n                this.state.isLoaded ?\n                    <MaterialReactTable\n                        initialState={{ density: 'compact' }}\n                        columns={tableColumnData} \n                        data={this.state.locationListData}\n                        enablePagination = {true}\n\n                        editingMode={\"row\"}\n                        enableEditing\n                        onEditingRowSave={(exitEditingMode) => this.handleSaveRowEdits(exitEditingMode)}\n                    /> : <br/>\n                }\n\n<br /><br />\n\n                {\n                    /* Create new location */\n                    <CContainer>\n                    <CRow className=\"justify-content-center\">\n                    <CCol md=\"8\">\n                        <CCardGroup>\n                        <CCard className=\"p-4\">\n                            <CCardBody>\n                            <CForm onSubmit={this.submitCreateLocationForm}>\n                                <h1>Save a new Location</h1>\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"Location Name\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputName\"\n                                        label=\"Location Name\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"Location Description\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputDescription\"\n                                        label=\"Location Description\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"LatLong\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputLatLong\"\n                                        label=\"LatLong\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"Google Plus Code\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputGooglePlusCode\"\n                                        label=\"Google Plus Code\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"city\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputCity\"\n                                        label=\"city\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"state\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputState\"\n                                        label=\"state\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"country\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputCountry\"\n                                        label=\"country\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                    </CCol>\n                                    <CCol xs=\"6\" className=\"text-right\">\n                                        <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                            </CCardBody>\n                        </CCard>\n                        </CCardGroup>\n                    </CCol>\n                    </CRow>\n                    </CContainer>\n                }\n                    \n\n                {/* //default */}\n                <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                <FailureModal visible={this.state.failureModalVisible} />\n            </div>\n            : <Loading />\n        );\n    }\n}\n\nexport default Location;\n"],"sourceRoot":""}