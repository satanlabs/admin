{"version":3,"sources":["views/QRCodeReader/QRCodeReader.js"],"names":["QRCodeReader","props","handleScan","data","console","log","setState","result","handleError","err","error","state","this","delay","onError","onScan","style","width","height","Component"],"mappings":"sQAIMA,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,WAAa,SAACC,GACVC,QAAQC,IAAIF,GACRA,GACA,EAAKG,SAAS,CACdC,OAAQJ,KAZE,EAiBlBK,YAAc,SAACC,GACXL,QAAQM,MAAM,wBAA0BD,IAfxC,EAAKE,MAAQ,CACTJ,OAAQ,aAJE,E,0CAqBlB,WACI,OACI,eAAC,IAAD,wDAII,uBACA,6BAAKK,KAAKD,MAAMJ,SAChB,uBAEA,uBAAM,uBAEN,cAAC,IAAD,CACIM,MAAO,IACPC,QAASF,KAAKJ,YACdO,OAAQH,KAAKV,WACbc,MAAO,CAAEC,MAAO,MAAQC,OAAQ,gB,GAvCzBC,aAiDZnB","file":"static/js/63.0daa3a33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'reactstrap';\nimport QrReader from 'react-qr-reader';\n\nclass QRCodeReader extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            result: 'No result'\n        };\n    }\n\n    handleScan = (data) => {\n        console.log(data);\n        if (data) {\n            this.setState({\n            result: data\n            });\n        }\n    }\n\n    handleError = (err) => {\n        console.error(\"handleError() : err :\" , err);\n    }\n\n    render() {\n        return (\n            <Card>\n                Hello from QRCodeReader ~~~~ !!!!\n\n                RESULT :\n                <hr/>\n                <h1>{this.state.result}</h1>\n                <hr/>\n                \n                <br /><br />\n\n                <QrReader\n                    delay={100}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '70%' , height: \"70%\"}}\n                />\n        \n\n            </Card>\n        )\n    }\n\n}\n\nexport default QRCodeReader;"],"sourceRoot":""}