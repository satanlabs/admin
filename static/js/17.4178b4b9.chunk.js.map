{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Loading.js","views/Filevault/Filevault.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","localStorage","logsEnabled","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","Component","FailureModal","ModalFooter","Button","onClick","CSpinner","size","FILE_NAME","Filevault","_this","call","uploadMultipleFiles","formData","FormData","index","state","files","append","setState","loadingModalVisible","fetch","then","res","status","failureModalVisible","setTimeout","error","getAllDroppedFiles","updatedList","concat","Card","Dropzone","onDrop","_ref","getRootProps","getInputProps","_objectSpread","webkitdirectory","mozdirectory","directory","multiple","border","map","droppedFile","name","path"],"mappings":"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","file":"static/js/17.4178b4b9.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">ğŸš€ ğŸš€ ğŸš€ Please wait. âŒ› âŒ› âŒ›</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    if(localStorage.logsEnabled !== 'true') \n        return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Loading = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <CSpinner color=\"success\" size=\"sm\"/>\n    </div>\n    ;\nexport default Loading;","import React, { Component } from 'react';\nimport { Card, Input, Button } from 'reactstrap';\nimport { Logger , reloadPage , humanFileSize } from '../../Utils/Utils';\nimport { requestHeaderGET , requestHeaderFilePOST } from '../../Rest-API/Header';\nimport Loading from \"../../Loading\";\nimport Dropzone from 'react-dropzone';\nimport {useDropzone} from 'react-dropzone';\nimport \"./Filevault.css\";\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\n\nconst FILE_NAME = \"Filevault.js\";\n\nclass Filevault extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        files: [],\n        loadingModalVisible: false,\n        loadingModalState: 0,\n        failureModalVisible: false,\n    };\n  }\n\n  uploadMultipleFiles = () => {\n\n    const formData = new FormData();\n    for(let index = 0; index < this.state.files.length; index++) {\n        formData.append(\"files\", this.state.files[index]);\n    };\n\n    //enable loader modal\n    this.setState({\n      loadingModalVisible: true,\n      loadingModalState: 0\n    });\n\n    fetch(\"http://192.168.1.109/filevault/uploadMultipleFiles\", requestHeaderFilePOST(formData))\n    .then(res => { if (res.status != 200) { this.setState({ failureModalVisible: true }) } })\n    .then(\n      (result) => {\n        Logger(FILE_NAME, \"uploadFile\", \"Fetch\", \"result\", result);\n        this.setState({\n          loadingModalState: 1\n        });\n\n        setTimeout(()=>{\n          this.setState({\n            loadingModalVisible: false\n          });\n          reloadPage();\n        } , 2000);\n      },\n      (error) => {\n        Logger(FILE_NAME, \"uploadFile\", \"Fetch\", \"error\", error);\n\n        this.setState({\n          loadingModalState: 2\n        });\n\n        setTimeout(()=>{\n          this.setState({\n            loadingModalVisible: false,\n            failureModalVisible: true\n          });\n        } , 2000);\n      }\n    );\n  }\n  getAllDroppedFiles = (files) => {\n    const updatedList = files.concat(this.state.files);\n    this.setState({\n        files: updatedList\n    });\n  }\n\n    render() {\n      Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n      return (\n          <Card id=\"FileUpload\">\n              <div className=\"wrapper\">\n                <Dropzone onDrop={this.getAllDroppedFiles} >\n                      {({getRootProps, getInputProps}) => (\n                          <section>\n                              <Card  {...getRootProps()}>\n                                <input {...getInputProps()} webkitdirectory={true} mozdirectory={true} directory={true} multiple={true} />\n                                <div className=\"upload\">\n                                  <p>Drag 'N Drop the files here or <span className=\"upload__button\">Browse</span></p>\n                                </div>\n                              </Card>\n                          </section>\n                      )}\n                  </Dropzone>\n                  \n                  <Button onClick={this.uploadMultipleFiles}>UPLOAD FILES</Button>\n\n                  <h1>Dropped file(s) : </h1>\n                  <table border = \"1\">\n                    <thead>\n                      <tr>\n                          <td>NAME</td>\n                          <td>DIR-path</td>\n                          <td>SIZE</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        (this.state.files.length > 0) &&\n                          this.state.files.map((droppedFile ,index) => \n                            <tr key={\"df_\" + index}>\n                              <td>{droppedFile.name}</td>\n                              <td>{droppedFile.path}</td>\n                              <td>{humanFileSize(droppedFile.size)}</td>\n                            </tr>\n                        )\n                      }\n                    </tbody>\n                  </table>\n\n                  \n              </div>\n              \n              <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n              <FailureModal visible={this.state.failureModalVisible} />\n          </Card>\n          );\n    }\n\n}\nexport default Filevault;"],"sourceRoot":""}