{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/collapseToast.ts","../../src/utils/cssTransition.tsx","../../src/utils/mapper.ts","../../src/core/eventManager.ts","../../src/components/Icons.tsx","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.ts"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","u","isNaN","d","p","m","g","y","h","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","T","INFO","SUCCESS","WARNING","ERROR","DEFAULT","E","enter","a","exit","appendPosition","i","collapse","c","collapseDuration","l","children","position","preventExitTransition","done","nodeRef","isIn","b","target","current","dispatchEvent","Event","removeEventListener","type","className","C","scrollHeight","o","style","s","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","v","addEventListener","createElement","Fragment","content","containerId","props","id","toastId","theme","data","isLoading","icon","status","list","Map","emitQueue","on","this","has","set","get","push","off","filter","delete","cancelEmit","forEach","clearTimeout","emit","slice","call","_","viewBox","width","fill","I","info","warning","success","error","spinner","O","indexOf","toastKey","displayedToast","count","queue","isToastActive","getToast","limit","L","toastContent","toastProps","staleId","shift","P","N","delay","enableMultiContainer","updateId","closeToast","x","B","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","R","k","hideProgressBar","progress","role","deleteToast","M","D","onOpen","onClose","w","getToastToRender","from","values","newestOnTop","reverse","containerRef","targetTouches","clientX","clientY","start","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","document","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","top","bottom","left","right","transform","opacity","Math","abs","once","hasFocus","window","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","playToast","pauseToast","isRunning","toastRef","eventHandlers","ariaLabel","stopPropagation","fillRule","hide","controlledProgress","animationDuration","animationPlayState","defaultClassName","defaultProps","A","F","ref","isValidElement","cloneElement","pointerEvents","map","displayName","S","z","H","random","toString","substring","q","U","size","options","Q","G","W","loading","promise","pending","render","resolver","dismiss","update","then","catch","warn","dark","clearWaitingQueue","isActive","onChange","POSITION","TYPE"],"mappings":"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","file":"static/js/9.70826ce4.chunk.js","sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { Icons } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    const maybeIcon = Icons[toastProps.type as keyof typeof Icons];\n    const iconProps = { theme: toastProps.theme, type: toastProps.type };\n    toastProps.icon = maybeIcon && maybeIcon(iconProps);\n\n    if (toastProps.icon === false) {\n      toastProps.icon = void 0;\n    } else if (isFn(toastProps.icon)) {\n      toastProps.icon = toastProps.icon(iconProps);\n    } else if (isValidElement(toastProps.icon)) {\n      toastProps.icon = cloneElement(toastProps.icon, iconProps);\n    } else if (isStr(toastProps.icon)) {\n      toastProps.icon = toastProps.icon;\n    } else if (toastProps.isLoading) {\n      toastProps.icon = Icons.spinner();\n    }\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon: Icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"],"sourceRoot":""}