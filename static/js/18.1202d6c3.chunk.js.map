{"version":3,"sources":["Utils/Utils.js","Rest-API/Header.js","views/Statuses/Statuses.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","views/pages/login/Login.js"],"names":["__DOUBLE_COLON__","__CALLED__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","dp","thresh","Math","abs","units","u","r","round","length","toFixed","Logger","fileName","methodName","message","undefined","variableName","variableValue","logData","console","log","goBack","history","back","goHome","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","Failure","props","className","style","color","fontSize","detailShow","Loading","role","Success","StatusModal","basic","this","loadingModalState","isOpen","visible","backdrop","Component","FailureModal","onClick","FILE_NAME","Login","submitForm","event","preventDefault","reqData","username","target","inputUsername","value","password","inputPazzword","setState","loadingModalVisible","fetch","JSON","stringify","then","res","json","result","code","loginProcedureForLocalStorage","token","setTimeout","failureModalVisible","error","state","isLoaded","document","title","logoutProcedureForLocalStorage","md","onSubmit","name","placeholder","autoComplete","type","id","label","required","xs"],"mappings":"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","file":"static/js/18.1202d6c3.chunk.js","sourcesContent":["const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome\n}","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST\n };","import React from 'react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n     Failure,\n     Loading,\n     Success\n    };\n","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","//Reminder.js\n\n/*\n * Reminder\n *\n * List all the features :\n *  - save a repeating ( OR a non-repeating ) reminder to the server.\n */\nimport React, { Component } from 'react';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { requestHeaderPOST } from \"../../../Rest-API/Header\";\nimport { goHome, Logger } from '../../../Utils/Utils';\nimport StatusModal from '../../Modals/StatusModal';\nimport FailureModal from '../../Modals/FailureModal';\nimport { loginProcedureForLocalStorage, logoutProcedureForLocalStorage } from '../../../Utils/AuthRelatedThings';\n\nconst FILE_NAME = \"Login.js\";\n\n\nclass Login extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        document.title = \"Satanlabs - login page\";\n        this.setState({\n            isLoaded: true\n        });\n        logoutProcedureForLocalStorage();\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            username: event.target.inputUsername.value,\n            password: event.target.inputPazzword.value\n        };\n\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n\n        let API_URL = 'https://backend.satanlabs.com/auth-chowkidar/token/generate';\n        fetch(API_URL, requestHeaderPOST(JSON.stringify(reqData)))\n        .then(res => res.json())\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    loginProcedureForLocalStorage(result.data.token, reqData.username);\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {goHome();}, 200);\n                } else if(result.code === 1003) {\n                    //wrong username/password : please try again\n                    this.setState({\n                        loadingModalState: 2,\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            loadingModalVisible: false\n                        });\n                    }, 500);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    render() {\n        Logger(FILE_NAME, \"render\", \"render\", \"this.state\", this.state);\n\n        return (\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\n            <CContainer>\n                <CRow className=\"justify-content-center\">\n                <CCol md=\"8\">\n                    <CCardGroup>\n                    <CCard className=\"p-4\">\n                        <CCardBody>\n                        <CForm onSubmit={this.submitForm}>\n                            <h1>Login</h1>\n                            <p className=\"text-muted\">Sign In to your account</p>\n                            <CInputGroup className=\"mb-3\">\n                            <CInputGroupPrepend>\n                                <CInputGroupText>\n                                <CIcon name=\"cil-user\" />\n                                </CInputGroupText>\n                            </CInputGroupPrepend>\n                            <CInput\n                                placeholder=\"Username\" \n                                autoComplete=\"on\"\n                                type=\"text\"\n                                id=\"inputUsername\"\n                                label=\"Username\"\n                                required\n                            />\n                            </CInputGroup>\n                            <CInputGroup className=\"mb-4\">\n                            <CInputGroupPrepend>\n                                <CInputGroupText>\n                                <CIcon name=\"cil-lock-locked\" />\n                                </CInputGroupText>\n                            </CInputGroupPrepend>\n                            <CInput \n                                placeholder=\"Paxxword\" \n                                autoComplete=\"on\" \n                                type=\"password\" \n                                id=\"inputPazzword\"\n                                label=\"Pazzword\"\n                                required\n                            />\n                            </CInputGroup>\n                            <CRow>\n                            <CCol xs=\"6\">\n                                <CButton color=\"primary\" className=\"px-4\" type='submit'>Login</CButton>\n                            </CCol>\n                            <CCol xs=\"6\" className=\"text-right\">\n                                <CButton color=\"link\" className=\"px-0\">Forgot pazzword?</CButton>\n                            </CCol>\n                            </CRow>\n                        </CForm>\n                        </CCardBody>\n                    </CCard>\n                    {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                        <CCardBody className=\"text-center\">\n                        <div>\n                            <h2>Sign up</h2>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                            labore et dolore magna aliqua.</p>\n                            <Link to=\"/register\">\n                            <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                            </Link>\n                        </div>\n                        </CCardBody>\n                    </CCard> */}\n                    </CCardGroup>\n                </CCol>\n                </CRow>\n            </CContainer>\n\n            <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n            <FailureModal visible={this.state.failureModalVisible} />\n            </div>);\n    }\n}\n\nexport default Login;"],"sourceRoot":""}