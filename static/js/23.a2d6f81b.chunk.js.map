{"version":3,"sources":["views/expenses/Store.js","views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","Utils/Enums.js"],"names":["FILE_NAME","initialState","isLoaded","loadingModalVisible","loadingModalState","failureModalVisible","storeListData","locationListData","locationListDataSelectTagSpecific","newStoreData","isCloudStore","locationId","tableColumnData","accessorKey","header","enableEditing","Cell","_ref","renderedCellValue","row","_ref2","_ref3","name","description","id","_ref4","moment","zone","format","_ref5","Store","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","submitCreateStoreForm","event","preventDefault","reqData","target","inputName","value","type","inputType","validationResult","doesStateContainAllRequiredStoreParams","state","setState","callCreateStoreApi","alert","JSON","parse","stringify","_createClass","key","this","resetStateToDefault","fetchLocationDataList","document","title","_this2","API_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","userData","getUserDataFromLocalStorage","fetch","requestHeaderGETWithAuth","authToken","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","reloadPage","Error","result","Logger","code","data","map","element","label","fetchStoreDataList","error","_this3","store","location","filterById","newStore","_this4","requestHeaderPOSTWithAuth","reloadData","_this5","_jsxs","children","_jsx","CButton","color","className","onClick","MaterialReactTable","density","columns","enablePagination","editingMode","onEditingRowSave","exitEditingMode","handleSaveRowEdits","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroup","CInputGroupPrepend","CInputGroupText","CIcon","CInput","placeholder","autoComplete","step","required","Select","onChange","choice","options","yesAndNoList","isClearable","xs","StatusModal","visible","FailureModal","Loading","Component","Failure","style","fontSize","detailShow","role","Success","__DOUBLE_COLON__","window","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","fileName","methodName","message","variableName","variableValue","localStorage","logsEnabled","logData","console","log","goBack","history","back","goHome","jsonObject","filter","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","body","requestHeaderFilePOST","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","apply","basic","Modal","isOpen","backdrop","ModalBody","ModalFooter","Button","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","unitOfMeasurementsList","categoryTypesList","commodityTypesList","backendValue","paymentInstrumentsList","paymentBanksList","expenseModesList"],"mappings":"0WAgCMA,EAAY,WAGZC,EAAe,CACjBC,UAAU,EACVC,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,EACrBC,cAAe,GACfC,iBAAkB,GAClBC,kCAAmC,GACnCC,aAAc,CACVC,aAAc,KACdC,WAAY,OAIdC,EAAkB,CACpB,CACIC,YAAa,KACbC,OAAQ,KACRC,eAAe,GAEnB,CACIF,YAAa,OACbC,OAAQ,OACRC,eAAe,GAEnB,CACIF,YAAa,OACbC,OAAQ,OACRC,eAAe,EACfC,KAAM,SAAAC,GAAA,IAAGC,EAAiBD,EAAjBC,kBAAsBD,EAAHE,IAAG,OAA8B,OAAtBD,EAA8B,MAAQA,CAAiB,GAElG,CACIL,YAAa,eACbC,OAAQ,eACRC,eAAe,EACfC,KAAM,SAAAI,GAAA,IAAGF,EAAiBE,EAAjBF,kBAAsBE,EAAHD,IAAG,OAAQD,EAAoB,MAAQ,IAAI,GAG3E,CACIL,YAAa,WACbC,OAAQ,WACRC,eAAe,EACfC,KAAM,SAAAK,GAAA,IAAGH,EAAiBG,EAAjBH,kBAAsBG,EAAHF,IAAG,OAA8B,OAAtBD,EAA8B,MAASA,EAAkBI,KAAO,KAAOJ,EAAkBK,YAAc,KAAOL,EAAkBM,GAAK,GAAI,GAGpL,CACIX,YAAa,YACbC,OAAQ,aACRC,eAAe,EACfC,KAAM,SAAAS,GAAA,IAAGP,EAAiBO,EAAjBP,kBAAsBO,EAAHN,IAAG,OAAQO,IAAOR,GAAmBS,KAAK,OAAOC,OAAO,0BAA0B,GAElH,CACIf,YAAa,YACbC,OAAQ,aACRC,eAAe,EACfC,KAAM,SAAAa,GAAA,IAAGX,EAAiBW,EAAjBX,kBAAsBW,EAAHV,IAAG,OAAQO,IAAOR,GAAmBS,KAAK,OAAOC,OAAO,0BAA0B,IAKhHE,EAAK,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAGP,SAAAA,EAAYK,GAAQ,IAADC,EAEuC,OAFvCC,YAAA,KAAAP,IACfM,EAAAH,EAAAK,KAAA,KAAMH,IAgJVI,sBAAwB,SAACC,GACrBA,EAAMC,iBAEN,IAAIC,EAAU,CACVpB,KAAMkB,EAAMG,OAAOC,UAAUC,MAC7BC,KAAMN,EAAMG,OAAOI,UAAUF,OAG3BG,EAAmBZ,EAAKa,yCACN,OAArBD,GAKHN,EAAQhC,aAAwD,QAAzC0B,EAAKc,MAAMzC,aAAaC,aAC/CgC,EAAQ/B,WAAayB,EAAKc,MAAMzC,aAAaE,WAE7CyB,EAAKe,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,IAGvBgC,EAAKgB,mBAAmBV,IAZpBW,MAAML,EAAmB,0CAajC,EAtKIZ,EAAKc,MAAQI,KAAKC,MAAMD,KAAKE,UAAUvD,IAAemC,CAC1D,CAsWC,OApWDqB,YAAA3B,EAAA,EAAA4B,IAAA,sBAAAb,MACA,WACIc,KAAKR,SAASG,KAAKC,MAAMD,KAAKE,UAAUvD,IAC5C,GAEA,CAAAyD,IAAA,aAAAb,MACA,WACIc,KAAKC,sBACLD,KAAKE,uBACT,GAEA,CAAAH,IAAA,oBAAAb,MACA,WACIiB,SAASC,MAAQ,mBACjBJ,KAAKE,uBACT,GAAC,CAAAH,IAAA,wBAAAb,MAED,WAAyB,IAADmB,EAAA,KAChBC,EAAUC,IAAyC,4CACjDC,EAAWC,cAEjBC,MAAMJ,EAASK,YAAyBH,EAASI,YAChDC,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,OAAOD,EAASE,OAkBpB,MAjBuB,MAApBF,EAASC,QACRV,EAAKb,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAEzBuE,YAAW,WACPC,cACAC,aACJ,GAAG,MAEHd,EAAKb,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAGvB,IAAI0E,MAAM,kBAAoBN,EAASC,OACjD,IACCF,MACG,SAACQ,GAEG,GADAC,YAAOjF,EAAW,wBAAyB,UAAW,SAAUgF,GAC7C,OAAhBA,EAAOE,KAAe,CAErB,IAAM1E,EAAoCwE,EAAOG,KAAKC,KAAI,SAACC,GACvD,MAAO,CACHxC,MAAOwC,EAAQ7D,GACf8D,MAAOD,EAAQ/D,KAAO,OAAU+D,EAAQ9D,YAAc,IAE9D,IACAyC,EAAKb,SAAS,CACV5C,iBAAkByE,EAAOG,KACzB3E,sCAEJwD,EAAKuB,oBACT,MAEIvB,EAAKb,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAGjC,IACA,SAACmF,GACGP,YAAOjF,EAAW,wBAAyB,UAAW,QAASwF,GAC/DxB,EAAKb,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAE7B,GAER,GAAC,CAAAqD,IAAA,qBAAAb,MAED,WAAsB,IAAD4C,EAAA,KACbxB,EAAUC,IAAyC,yCACjDC,EAAWC,cAEjBC,MAAMJ,EAASK,YAAyBH,EAASI,YAChDC,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,OAAOD,EAASE,OAkBpB,MAjBuB,MAApBF,EAASC,QACRe,EAAKtC,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAEzBuE,YAAW,WACPC,cACAC,aACJ,GAAG,MAEHW,EAAKtC,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAGvB,IAAI0E,MAAM,kBAAoBN,EAASC,OACjD,IACCF,MACG,SAACQ,GAEG,GADAC,YAAOjF,EAAW,qBAAsB,UAAW,SAAUgF,GAC1C,OAAhBA,EAAOE,KAAe,CACrB,IAAM5E,EAAgB0E,EAAOG,KAAKC,KAAI,SAAAM,GAElC,OADAA,EAAMC,SAAWC,YAAWH,EAAKvC,MAAM3C,iBAAkBmF,EAAM/E,YACxD+E,CACX,IAEAD,EAAKtC,SAAS,CACVjD,UAAU,EACVI,iBAER,MAEImF,EAAKtC,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAGjC,IACA,SAACmF,GACGP,YAAOjF,EAAW,qBAAsB,UAAW,QAASwF,GAC5DC,EAAKtC,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAE7B,GAER,GAAC,CAAAqD,IAAA,yCAAAb,MA2BD,WACI,OAA4C,OAAzCc,KAAKT,MAAMzC,aAAaC,aAChB,4BACiC,OAAzCiD,KAAKT,MAAMzC,aAAaC,cAAgE,OAAvCiD,KAAKT,MAAMzC,aAAaE,WACjE,2CAEJ,IACX,GAAC,CAAA+C,IAAA,qBAAAb,MAED,SAAmBgD,GAAW,IAADC,EAAA,KACrB7B,EAAUC,IAAyC,yCACjDC,EAAWC,cACjBC,MAAMJ,EAAS8B,YAA0BzC,KAAKE,UAAUqC,GAAW1B,EAASI,YAC3EC,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,OAAOD,EAASE,OAkBpB,MAjBuB,MAApBF,EAASC,QACRoB,EAAK3C,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAEzBuE,YAAW,WACPC,cACAC,aACJ,GAAG,MAEHgB,EAAK3C,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,IAGvB,IAAI0E,MAAM,kBAAoBN,EAASC,OACjD,IACCF,MACG,SAACQ,GACGC,YAAOjF,EAAW,qBAAsB,UAAW,SAAUgF,GAC1C,OAAhBA,EAAOE,MAENY,EAAK3C,SAAS,CACV/C,kBAAmB,IAEvBwE,YAAW,WAAOkB,EAAKE,YAAa,GAAG,MAGvCF,EAAK3C,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAGjC,IACA,SAACmF,GACGP,YAAOjF,EAAW,qBAAsB,UAAW,QAASwF,GAC5DM,EAAK3C,SAAS,CACVhD,qBAAqB,EACrBC,kBAAmB,EACnBC,qBAAqB,GAE7B,GAER,GAGA,CAAAqD,IAAA,SAAAb,MACA,WAAU,IAADoD,EAAA,KAIL,OAFAhB,YAAOjF,EAAW,SAAU,GAAI,aAAc2D,KAAKT,OAG/CS,KAAKT,MAAMhD,SACXgG,eAAA,OAAAC,SAAA,CACID,eAAA,MAAAC,SAAA,CAAI,6BACAC,cAACC,IAAO,CAACC,MAAM,UAAUC,UAAU,OAAOC,QAAS,kBAAMP,EAAKD,YAAY,EAACG,SAAC,mBAEhFC,cAAA,SAGIzC,KAAKT,MAAMhD,SACPkG,cAACK,IAAkB,CACfxG,aAAc,CAAEyG,QAAS,WACzBC,QAAS/F,EACTuE,KAAMxB,KAAKT,MAAM5C,cACjBsG,kBAAoB,EAEpBC,YAAa,MACb9F,eAAa,EACb+F,iBAAkB,SAACC,GAAe,OAAKd,EAAKe,mBAAmBD,EAAgB,IAC9EX,cAAA,SAGbA,cAAA,SAAMA,cAAA,SAIFA,cAACa,IAAU,CAAAd,SACXC,cAACc,KAAI,CAACX,UAAU,yBAAwBJ,SACxCC,cAACe,IAAI,CAACC,GAAG,IAAGjB,SACRC,cAACiB,IAAU,CAAAlB,SACXC,cAACkB,IAAK,CAACf,UAAU,MAAKJ,SAClBC,cAACmB,IAAS,CAAApB,SACVD,eAACsB,IAAK,CAACC,SAAU9D,KAAKpB,sBAAsB4D,SAAA,CACxCC,cAAA,MAAAD,SAAI,qBACJD,eAACwB,IAAW,CAACnB,UAAU,OAAMJ,SAAA,CACzBC,cAACuB,IAAkB,CAAAxB,SACfC,cAACwB,IAAe,CAAAzB,SAChBC,cAACyB,IAAK,CAACvG,KAAK,kBAGhB8E,cAAC0B,IAAM,CACHC,YAAY,aACZC,aAAa,KACblF,KAAK,OACLmF,KAAK,MACLzG,GAAG,YACH8D,MAAM,aACN4C,UAAQ,OAIhBhC,eAACwB,IAAW,CAACnB,UAAU,OAAMJ,SAAA,CACzBC,cAACuB,IAAkB,CAAAxB,SACfC,cAACwB,IAAe,CAAAzB,SAChBC,cAACyB,IAAK,CAACvG,KAAK,kBAGhB8E,cAAC0B,IAAM,CACHC,YAAY,aACZC,aAAa,KACblF,KAAK,OACLmF,KAAK,MACLzG,GAAG,YACH8D,MAAM,aACN4C,UAAQ,OAIhB9B,cAACyB,IAAK,CAACvG,KAAK,cAAc,IAAC8E,cAAA,KAAAD,SAAG,uBAC9BC,cAAA,SACAA,cAAC+B,IAAM,CACHC,SAAU,SAACC,GACP,IAAM5H,EAAewF,EAAK/C,MAAMzC,aAChCA,EAAaC,aAA2B,OAAX2H,EAAmB,KAAOA,EAAOxF,MAC9DoD,EAAK9C,SAAS,CACV1C,gBAER,EACA6H,QAASC,IACTC,aAAa,IAEjBpC,cAAA,SAEAA,cAACyB,IAAK,CAACvG,KAAK,cAAc,YAAa8E,cAAA,KAAAD,SAAG,eAAc,IAA4C,QAAzCxC,KAAKT,MAAMzC,aAAaC,aAA0B,uDAAqC,GAClJ0F,cAAA,SACAA,cAAC+B,IAAM,CACHC,SAAU,SAACC,GACP,IAAM5H,EAAewF,EAAK/C,MAAMzC,aAChCA,EAAaE,WAAyB,OAAX0H,EAAmB,KAAOA,EAAOxF,MAC5DoD,EAAK9C,SAAS,CACV1C,gBAER,EACA6H,QAAS3E,KAAKT,MAAM1C,kCACpBgI,aAAa,IAEjBpC,cAAA,SAEAF,eAACgB,KAAI,CAAAf,SAAA,CACDC,cAACe,IAAI,CAACsB,GAAG,IAAGtC,SACRC,cAACC,IAAO,CAACC,MAAM,UAAUC,UAAU,OAAOzD,KAAK,SAAQqD,SAAC,WAE5DC,cAACe,IAAI,CAACsB,GAAG,IAAIlC,UAAU,aAAYJ,SAC/BC,cAACC,IAAO,CAACC,MAAM,SAASC,UAAU,OAAOC,QAAS,kBAAMP,EAAKD,YAAY,EAACG,SAAC,6CAanGC,cAACsC,IAAW,CAACC,QAAShF,KAAKT,MAAM/C,oBAAqBC,kBAAmBuD,KAAKT,MAAM9C,oBACpFgG,cAACwC,IAAY,CAACD,QAAShF,KAAKT,MAAM7C,yBAEpC+F,cAACyC,IAAO,GAElB,KAAC/G,CAAA,CA5WM,CAASgH,aA+WLhH,W,mCC9cf,8HAGMiH,EAAU,SAAC5G,GAAK,OAClB+D,eAAA,OAAKK,UAAU,+CAA8CJ,SAAA,CAC3DC,cAAA,KAAGG,UAAU,gBAAgByC,MAAO,CAAE1C,MAAO,MAAO2C,SAAU,UAC9D7C,cAAA,MAAAD,SAAI,iBAEDhE,EAAM+G,YACHhD,eAAA,OAAAC,SAAA,CAAK,2DACqDC,cAAA,cAI3D,EAGLyC,EAAU,WAAH,OACT3C,eAAA,OAAKK,UAAU,8BAA6BJ,SAAA,CACxCC,cAAA,SACAA,cAAA,OAAKG,UAAU,4BAA4B4C,KAAK,WAC1C/C,cAAA,SACNA,cAAA,OAAKG,UAAU,eAAcJ,SAAC,kBAK9BC,cAAA,WACE,EAGJgD,EAAU,WAAH,OACTlD,eAAA,OAAKK,UAAU,mCAAkCJ,SAAA,CAC7CC,cAAA,MAAIG,UAAU,8BAEdH,cAAA,KAAGG,UAAU,eAAcJ,SAAC,oBAC1B,C,mCCpCV,oRAEMkD,EAAmB,MAInBvE,EAAa,WACfwE,OAAO3D,SAAS4D,QACpB,EAGMC,EAAmB,SAACC,GACtBH,OAAOI,KAAKD,EAAK,SACrB,EAEME,EAAkB,SAACC,EAAkBC,GACvC,IAAIC,EAAyB,GAQ7B,OANAF,EAAiBG,SAAQ,SAACC,IAClBC,EAA6BD,EAAQA,QAASH,IACzCI,EAA6BD,EAAQE,UAAWL,KADUC,EAAuBK,KAAKH,EAGnG,IAEOF,CAEX,EAEMG,EAA+B,SAACG,EAAQC,GAM1C,OAJAA,GAAW,GACXD,GAFAA,GAAU,IAEME,cAChBD,EAAUA,EAAQC,cAEXF,EAAOG,SAASF,EAC3B,EAEA,SAASG,EAAcC,GAAuB,IAAhBC,IAAEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAOG,EAAEH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EAChCI,EAASL,EAAK,IAAO,KAE3B,GAAIM,KAAKC,IAAIR,GAASM,EACpB,OAAON,EAAQ,KAGjB,IAAMS,EAAQR,EACV,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDS,GAAK,EACHC,EAACJ,KAAAK,IAAG,GAAIP,GAEd,GACEL,GAASM,IACPI,QACKH,KAAKM,MAAMN,KAAKC,IAAIR,GAASW,GAAKA,GAAKL,GAAUI,EAAID,EAAMN,OAAS,GAE7E,OAAOH,EAAMc,QAAQT,GAAM,IAAMI,EAAMC,EACzC,CAIF,IAAMlG,EAAS,SAACuG,EAAUC,GAA0F,IAA9EC,EAAOf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAAWc,EAAYhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAAWe,EAAajB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACjG,GAAgC,SAA7BgB,aAAaC,YAAhB,CAIA,IAAIC,EAAUP,EA7DC,MA6DuBC,EAAxBD,YAAqEnC,EAElFqC,IAAaK,GAAYL,EAAUrC,GAEhCsC,GACAI,GAAYJ,EAAetC,EAC3B2C,QAAQC,IAAIF,EAASH,IAGrBI,QAAQC,IAAIF,EAZN,CAcd,EAEMG,EAAS,WACX5C,OAAO6C,QAAQC,MACnB,EAEMC,EAAS,WACX/C,OAAOI,KAAK,IAAK,QACrB,EAMM9D,EAAa,SAAC0G,EAAY9K,GAC5B,IAAMwD,EAASsH,EAAWC,QACtB,SAAAD,GAAU,OAAKA,EAAe,IAAK9K,CAAE,IAEzC,OAAyB,GAAjBwD,EAAO4F,OAAe,KAAO5F,EAAO,EAChD,C,mCC/FA,kPAAMwH,EAA2B,mBAE3BC,EAAmB,WACrB,MACI,CACIC,OAAQ,MACRC,QAAS,CACT,EAGZ,EAEMC,EAAoB,SAACzH,GACvB,MACI,CACIuH,OAAQ,OACRC,QAAS,CACL,eAAgBH,GAEpBK,KAAM1H,EAGlB,EAEM2H,EAAwB,SAAC3H,GAC3B,MACI,CACIuH,OAAQ,OACRC,QAAS,CACT,EACAE,KAAM1H,EAGlB,EAIMb,EAA2B,SAACC,GAC9B,MACI,CACImI,OAAQ,MACRC,QAAS,CACL,cAAiBpI,GAIjC,EAEMwB,EAA4B,SAACZ,EAAMZ,GACrC,MACI,CACImI,OAAQ,OACRC,QAAS,CACL,eAAgBH,EAChB,cAAiBjI,GAErBsI,KAAM1H,EAGlB,EAEM4H,EAA2B,SAAC5H,EAAMZ,GACpC,MACI,CACImI,OAAQ,MACRC,QAAS,CACL,eAAgBH,EAChB,cAAiBjI,GAErBsI,KAAM1H,EAGlB,EAEM6H,EAA8B,SAAC7H,EAAMZ,GACvC,MACI,CACImI,OAAQ,SACRC,QAAS,CACL,eAAgBH,EAChB,cAAiBjI,GAErBsI,KAAM1H,EAGlB,C,uHC/EMuD,EAAW,SAAA3G,GAAAC,YAAA0G,EAAA3G,GAAA,IAAAE,EAAAC,YAAAwG,GAAA,SAAAA,IAAA,OAAArG,YAAA,KAAAqG,GAAAzG,EAAAgL,MAAA,KAAAtC,UAAA,CAsBZ,OAtBYlH,YAAAiF,EAAA,EAAAhF,IAAA,SAAAb,MACb,WACI,IAAIqK,EAAQ9G,cAAA,UAWZ,OATA8G,EADoC,GAAhCvJ,KAAKxB,MAAM/B,kBACPgG,cAACyC,IAAO,IAEyB,GAAhClF,KAAKxB,MAAM/B,kBACZgG,cAACgD,IAAO,IAGRhD,cAAC2C,IAAO,IAIhB3C,cAAC+G,IAAK,CAACC,OAAQzJ,KAAKxB,MAAMwG,QAAS0E,SAAU,SAAU9G,UAAW,gBAAgBJ,SAC9EC,cAACkH,IAAS,CAAAnH,SACVC,cAAA,OAAKG,UAAU,mCAAkCJ,SAC5C+G,OAKb,KAACxE,CAAA,CAtBY,CAASI,aAyBXJ,K,mJC1BTE,EAAY,SAAA7G,GAAAC,YAAA4G,EAAA7G,GAAA,IAAAE,EAAAC,YAAA0G,GAAA,SAAAA,IAAA,OAAAvG,YAAA,KAAAuG,GAAA3G,EAAAgL,MAAA,KAAAtC,UAAA,CAoBb,OApBalH,YAAAmF,EAAA,EAAAlF,IAAA,SAAAb,MACd,WACI,OACIqD,eAACiH,IAAK,CAACC,OAAQzJ,KAAKxB,MAAMwG,QAAS0E,SAAU,SAAU9G,UAAW,eAAeJ,SAAA,CACjFC,cAACkH,IAAS,CAAAnH,SACRC,cAAA,OAAKG,UAAU,mCAAkCJ,SAC/CC,cAAC2C,IAAO,CAACG,YAAY,QAGzBhD,eAACqH,IAAW,CAAApH,SAAA,CACVC,cAACoH,IAAM,CAAClH,MAAM,YAAYE,QAAS0F,IAAO/F,SAAC,SAAa,WAExDC,cAACoH,IAAM,CAAClH,MAAM,YAAYE,QAAS1B,IAAWqB,SAAC,WAAe,WAE9DC,cAACoH,IAAM,CAAClH,MAAM,YAAWH,SAAC,WAAe,WAEzCC,cAACoH,IAAM,CAAClH,MAAM,UAAUE,QAAS6F,IAAOlG,SAAC,cAInD,KAACyC,CAAA,CApBa,CAASE,aAuBZF,K,mCC1Bf,0GACM6E,EAA4B,+CAE5BC,EAAkC,6CAClCxJ,EAAyC,mD,mCCN/C,8OAEA,IAoCMyJ,EAAyB,CAC3B,CACI9K,MAAM,aACNyC,MAAO,2BAEX,CACIzC,MAAM,OACNyC,MAAO,qBAEX,CACIzC,MAAM,QACNyC,MAAO,uBAITsI,EAAoB,CACtB,CACI/K,MAAM,YACNyC,MAAO,aAEX,CACIzC,MAAM,OACNyC,MAAO,SAITuI,EAAqB,CACvB,CACIhL,MAAM,UACNyC,MAAO,wBAEX,CACIzC,MAAM,UACNyC,MAAO,YAITiD,EAAe,CACjB,CACI1F,MAAM,MACNyC,MAAO,aACPwI,cAAc,GAElB,CACIjL,MAAM,KACNyC,MAAO,YACPwI,cAAc,IAIhBC,EAAyB,CAC3B,CACIlL,MAAM,MACNyC,MAAO,6CAEX,CACIzC,MAAM,cACNyC,MAAO,4BAEX,CACIzC,MAAM,cACNyC,MAAO,6BAEX,CACIzC,MAAM,aACNyC,MAAO,wCAEX,CACIzC,MAAM,OACNyC,MAAO,mCAKT0I,EAAmB,CACrB,CACInL,MAAM,MACNyC,MAAO,OAEX,CACIzC,MAAM,OACNyC,MAAO,SAIT2I,EAAoB,CACtB,CACIpL,MAAM,SACNyC,MAAO,uBAEX,CACIzC,MAAM,eACNyC,MAAO,6B","file":"static/js/23.a2d6f81b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { requestHeaderDELETEWithAuth, requestHeaderGETWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, getSearchResult, openPageInNewTab, reloadPage, goHome, filterById } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport Table from 'react-bootstrap/Table';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,\n    CTextarea\n  } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport { brandSet } from '@coreui/icons';\nimport MaterialReactTable from 'material-react-table';\nimport Select from 'react-select';\nimport { yesAndNoList } from 'src/Utils/Enums';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\n\n//default\nconst FILE_NAME = \"Store.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    storeListData: [],\n    locationListData: [],\n    locationListDataSelectTagSpecific: [],\n    newStoreData: {\n        isCloudStore: null,\n        locationId: null\n    }\n};\n\nconst tableColumnData = [\n    {\n        accessorKey: 'id',\n        header: 'ID',\n        enableEditing: false,\n    },\n    {\n        accessorKey: 'name',\n        header: 'name',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'type',\n        header: 'type',\n        enableEditing: true,\n        Cell: ({ renderedCellValue, row }) => (renderedCellValue === null) ? \"N/A\" : renderedCellValue\n    },\n    {\n        accessorKey: 'isCloudStore',\n        header: 'isCloudStore',\n        enableEditing: true,\n        Cell: ({ renderedCellValue, row }) => (renderedCellValue ? \"YES\" : \"NO\")\n    },\n\n    {\n        accessorKey: 'location',\n        header: 'location',\n        enableEditing: true,\n        Cell: ({ renderedCellValue, row }) => (renderedCellValue === null) ? \"N/A\" : (renderedCellValue.name + \" [\" + renderedCellValue.description + \"][\" + renderedCellValue.id + \"]\")\n    },\n    \n    {\n        accessorKey: 'createdAt',\n        header: 'Created At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n    {\n        accessorKey: 'updatedAt',\n        header: 'Updated At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n];\n\n\nclass Store extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchLocationDataList();\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Expenses - Store\";\n        this.fetchLocationDataList();\n    }\n\n    fetchLocationDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/location/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const locationListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name + \" [**\" +  element.description + \"]\"\n                        };\n                    });\n                    this.setState({\n                        locationListData: result.data,\n                        locationListDataSelectTagSpecific\n                    });\n                    this.fetchStoreDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchStoreDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/store/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    const storeListData = result.data.map(store => {\n                        store.location = filterById(this.state.locationListData, store.locationId);\n                        return store;\n                    });\n                    //success\n                    this.setState({\n                        isLoaded: true,\n                        storeListData\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    submitCreateStoreForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            name: event.target.inputName.value,\n            type: event.target.inputType.value,\n        };\n\n        const validationResult = this.doesStateContainAllRequiredStoreParams();\n        if(validationResult !== null) {\n            alert(validationResult + \" . ℹ️ Form validation failed.\");\n            return;\n        }\n        \n        reqData.isCloudStore = this.state.newStoreData.isCloudStore === 'YES' ? true : false;\n        reqData.locationId = this.state.newStoreData.locationId;\n\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n\n        this.callCreateStoreApi(reqData);\n    }\n\n    doesStateContainAllRequiredStoreParams() {\n        if(this.state.newStoreData.isCloudStore === null)\n            return \"isCloudStore NOT selected\";\n        if(this.state.newStoreData.isCloudStore === 'NO' && this.state.newStoreData.locationId === null)\n            return \"location is MANTORY for non-cloud stores\";\n        \n        return null;\n    }\n\n    callCreateStoreApi(newStore) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/store/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newStore), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callCreateStoreApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callCreateStoreApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (\n            this.state.isLoaded ? \n            <div>\n                <h1>STORE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                    <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                </h1>\n                <br />\n\n                {\n                    this.state.isLoaded ?\n                        <MaterialReactTable\n                            initialState={{ density: 'compact' }}\n                            columns={tableColumnData} \n                            data={this.state.storeListData}\n                            enablePagination = {true}\n\n                            editingMode={\"row\"}\n                            enableEditing\n                            onEditingRowSave={(exitEditingMode) => this.handleSaveRowEdits(exitEditingMode)}\n                        /> : <br/>\n                }\n                \n                <br /><br />\n\n                {\n                    /* Create new store */\n                    <CContainer>\n                    <CRow className=\"justify-content-center\">\n                    <CCol md=\"8\">\n                        <CCardGroup>\n                        <CCard className=\"p-4\">\n                            <CCardBody>\n                            <CForm onSubmit={this.submitCreateStoreForm}>\n                                <h1>Save a new Store</h1>\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"Store Name\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputName\"\n                                        label=\"Store Name\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                        <CInputGroupText>\n                                        <CIcon name=\"cilPencil\" />\n                                        </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput\n                                        placeholder=\"Store Type\" \n                                        autoComplete=\"on\"\n                                        type=\"text\"\n                                        step=\"any\"\n                                        id=\"inputType\"\n                                        label=\"Store Type\"\n                                        required\n                                    />\n                                </CInputGroup>\n\n                                <CIcon name=\"cilPencil\" /> <b>Is Cloud Store ? :</b>\n                                <br />\n                                <Select \n                                    onChange={(choice) => {\n                                        const newStoreData = this.state.newStoreData;\n                                        newStoreData.isCloudStore = (choice === null) ? null : choice.value;\n                                        this.setState({\n                                            newStoreData\n                                        });\n                                    }}\n                                    options={yesAndNoList}\n                                    isClearable={true}\n                                />\n                                <br />\n\n                                <CIcon name=\"cilPencil\" />&nbsp;&nbsp; <b>Location :</b> {(this.state.newStoreData.isCloudStore === 'YES') ? \"⛔️ ℹ️ Not reqd. for online store\" : \"\" }\n                                <br />\n                                <Select \n                                    onChange={(choice) => {\n                                        const newStoreData = this.state.newStoreData;\n                                        newStoreData.locationId = (choice === null) ? null : choice.value;\n                                        this.setState({\n                                            newStoreData\n                                        });\n                                    }}\n                                    options={this.state.locationListDataSelectTagSpecific}\n                                    isClearable={true}\n                                />\n                                <br />\n\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                    </CCol>\n                                    <CCol xs=\"6\" className=\"text-right\">\n                                        <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                            </CCardBody>\n                        </CCard>\n                        </CCardGroup>\n                    </CCol>\n                    </CRow>\n                    </CContainer>  \n                }\n\n                {/* //default */}\n                <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                <FailureModal visible={this.state.failureModalVisible} />\n            </div>\n            : <Loading />\n        );\n    }\n}\n\nexport default Store;\n","import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    if(localStorage.logsEnabled !== 'true') \n        return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","/* Contains all the enums */\n\nconst fileTypeArray = [\n    {\n        id: 1,\n        commonName: \"pdf\",\n        shortForm: \"PDF\",\n        fullForm: \"Portable Document Format\"\n    },\n    {\n        id: 2,\n        commonName: \"xls\",\n        shortForm: \"XLS\",\n        fullForm: \"Microsoft Excel file\"\n    },\n    {\n        id: 3,\n        commonName: \"csv\",\n        shortForm: \"CSV\",\n        fullForm: \"Comma-Separated Values\"\n    }\n];\n\nconst getFileTypeById = (id) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.id == id;\n    })\n};\nconst getFileTypeByName = (name) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.name == name;\n    })\n};\n\n\n/* EXPENSE related enums */\n\n\nconst unitOfMeasurementsList = [\n    {\n        value:\"MILLILITER\",\n        label: \"MILLILITER 💧\"\n    },\n    {\n        value:\"GRAM\",\n        label: \"GRAM 🍎\"\n    },\n    {\n        value:\"COUNT\",\n        label: \"COUNT 🥚\"\n    }\n];\n\nconst categoryTypesList = [\n    {\n        value:\"ON_DEMAND\",\n        label: \"ON_DEMAND\"\n    },\n    {\n        value:\"BILL\",\n        label: \"BILL\"\n    }\n];\n\nconst commodityTypesList = [\n    {\n        value:\"PRODUCT\",\n        label: \"PRODUCT 🍎\"\n    },\n    {\n        value:\"SERVICE\",\n        label: \"SERVICE\"\n    }\n];\n\nconst yesAndNoList = [\n    {\n        value:\"YES\",\n        label: \"YES ✅\",\n        backendValue: true\n    },\n    {\n        value:\"NO\",\n        label: \"NO ❌\",\n        backendValue: false\n    }\n];\n\nconst paymentInstrumentsList = [\n    {\n        value:\"UPI\",\n        label: \"UPI 🇮🇳 🧾\"\n    },\n    {\n        value:\"NET_BANKING\",\n        label: \"NET BANKING 🔗\"\n    },\n    {\n        value:\"CREDIT_CARD\",\n        label: \"CREDIT CARD 💳 \"\n    },\n    {\n        value:\"DEBIT_CARD\",\n        label: \"DEBIT CARD 💳 🏧\"\n    },\n    {\n        value:\"CASH\",\n        label: \"CASH 💰 💵\"\n    },\n];\n\n\nconst paymentBanksList = [\n    {\n        value:\"SBI\",\n        label: \"SBI\"\n    },\n    {\n        value:\"AXIS\",\n        label: \"AXIS\"\n    },\n];\n\nconst expenseModesList  = [\n    {\n        value:\"ONLINE\",\n        label: \"ONLINE 🔗\"\n    },\n    {\n        value:\"STORE_BOUGHT\",\n        label: \"STORE_BOUGHT 🏪\"\n    },\n];\n\nexport {\n    fileTypeArray,\n    getFileTypeById,\n    getFileTypeByName,\n\n    unitOfMeasurementsList,\n    categoryTypesList,\n    commodityTypesList,\n    yesAndNoList,\n\n    paymentInstrumentsList,\n    paymentBanksList,\n    expenseModesList\n\n};\n"],"sourceRoot":""}