{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","views/Weight/WeightGraph.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","copyStringToClipboard","someStr","navigator","clipboard","writeText","findCostPer","quantity","amount","perQuantity","final","concat","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","Component","render","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","FailureModal","ModalFooter","Button","onClick","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","FILE_NAME","COLORS","initialState","isLoaded","loadingModalVisible","failureModalVisible","weightListData","graphType","graphMode","dataForPlot_weight","WeightList","constructor","super","plotDataForWeight","setState","setTimeout","cleanDataForPlotting","type_of_data","plotDatas","randomColor","floor","random","x","y","state","createdOn","value","type","mode","marker","name","JSON","parse","stringify","resetStateToDefault","componentDidMount","document","title","fetchWeightDataList","offset","API_URL","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","logoutProcedureForLocalStorage","Error","code","error","reloadData","width","innerWidth","height","innerHeight","textAlign","onChange","e","target","CButton","size","Plot","showlegend","layout"],"mappings":"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","file":"static/js/23.63ed0c8b.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // if(localStorage.logsEnabled !== 'true') \n    //     return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nconst copyStringToClipboard = (someStr) => {\n    //console.log('copyStringToClipboard() : someStr = ', someStr);\n    // alert('clipboard added = ' + someStr);\n    navigator.clipboard.writeText(someStr);\n}\n\nconst findCostPer = (quantity, amount, perQuantity) => {\n    const final = ( amount / quantity ) * perQuantity;\n    console.log(`quantity = ${quantity}, amount = ${amount}, perQuantity = ${perQuantity}, final = ${final}`);\n    return final;\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById,\n    copyStringToClipboard,\n    findCostPer\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","import React, { Component } from 'react';\nimport { requestHeaderGETWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, reloadPage } from '../../Utils/Utils';\nimport { Button } from 'reactstrap';\nimport { Loading } from '../Statuses/Statuses';\nimport Plot from 'react-plotly.js';\nimport { CButton } from '@coreui/react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport { BACKEND_WEIGHT_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\n\nconst FILE_NAME = \"WeightGraph.js\";\n\nconst COLORS = [\n    \"red\",\"green\",\"blue\",\"#b59a14\",\"#b514a5\",\"black\",\"orange\"\n  ];\n\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    weightListData: null,\n    graphType: \"scatter\",\n    graphMode: \"lines+markers\",\n    dataForPlot_weight : null\n};\n\nclass WeightList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    componentDidMount() {\n        document.title = \"Satanlabs - weight graph page\";\n        this.fetchWeightDataList();\n    }\n\n    fetchWeightDataList(offset) {\n        this.setState({\n            isLoaded: false\n        });\n        let API_URL = BACKEND_WEIGHT_SERVICE_BASE_URL + '/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        weightListData: result.data\n                    });\n                    this.plotDataForWeight();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    plotDataForWeight = () => {\n        this.setState({\n            isLoaded: false\n        });\n\n        setTimeout(() => {\n            this.setState({\n                dataForPlot_weight: this.cleanDataForPlotting(\"weight\"),\n                isLoaded: true\n            });\n        }, 200);\n        \n    }\n\n    cleanDataForPlotting = (type_of_data) => {\n        let plotDatas = [];\n    \n        const randomColor = Math.floor(Math.random() * COLORS.length);\n    \n        let x = [] , y = [];\n        this.state.weightListData.forEach(data => {\n            x.push(data.createdOn);\n            y.push(data.value);\n        });\n    \n        plotDatas.push(\n        {\n            x: [ ...x ],\n            y: [ ...y ],\n            type:this.state.graphType,\n            mode: this.state.graphMode,\n            marker: {color: COLORS[randomColor]},\n            name: `${type_of_data}`\n        }\n        );\n    \n        return plotDatas;\n      }\n\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchWeightDataList();\n    }\n\n    render() {\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n        const width = window.innerWidth * 0.85;\n        const height = window.innerHeight * 0.60;\n\n        return (\n            <div>\n            {\n                <div style={{textAlign:\"right\"}}>\n                <select onChange={e=>{\n                    this.fetchWeightDataList(e.target.value);\n                }}>\n                    <option value=\"\">Select no of items</option>\n                    <option value={0} key={\"all__a\"}>All items</option>\n                    <option value={10} key={\"10__a\"}>10</option>\n                    <option value={100} key={\"100__a\"}>100</option>\n                    <option value={1000} key={\"1000__a\"}>1000</option>\n                    <option value={10000} key={\"10000__a\"}>10000</option>\n                    <option value={100000} key={\"100000__a\"}>10000</option>\n                    <option value={1000000} key={\"1000000__a\"}>1000000</option>\n                </select>\n                </div>\n            }\n            {\n                this.state.isLoaded ? \n                <div>\n                    <h2>Weight data list : </h2>\n                    <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>reloadData</CButton>\n                    <br /><br />\n                    {<div>\n                        <span>\n                            <b>Change Type :</b>&nbsp;&nbsp;\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphType: \"scatter\"}); this.plotDataForWeight(); }}>scatter TYPE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphType: \"bar\"}); this.plotDataForWeight(); }}>bar TYPE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            CURRENT Type : [ { this.state.graphType } ]\n                            <br /><br />\n                        </span>\n                        <span>\n                            <b>Change Mode :</b>&nbsp;&nbsp;\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines\"}); this.plotDataForWeight(); }}>lines MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"danger\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines+markers\"}); this.plotDataForWeight(); }}>lines+markers MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"markers\"}); this.plotDataForWeight(); }}>markers MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            CURRENT Mode : [ { this.state.graphMode } ]\n                            <br /><br />\n                        </span>\n                    </div>\n                    }\n                    <Plot\n                        showlegend={false}\n                        data={ this.state.dataForPlot_weight }\n                        layout={ {width, height, title: 'Weight data' } }\n                    />\n                    <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                    <FailureModal visible={this.state.failureModalVisible} />\n                </div> \n                : <Loading />\n            }\n        </div>\n    );\n}\n\n}\n\nexport default WeightList;\n"],"sourceRoot":""}