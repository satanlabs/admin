{"version":3,"sources":["views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js","views/widgets/WidgetsDropdown.js"],"names":["ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","_jsx","CChartLine","labels","defaultProps","ChartBarSimple","barPercentage","categoryPercentage","CChartBar","WidgetsDropdown","_jsxs","CRow","children","CCol","sm","lg","CWidgetDropdown","header","text","footerSlot","className","style","height","CDropdown","CDropdownToggle","CIcon","name","CDropdownMenu","placement","CDropdownItem","disabled","tension","caret"],"mappings":"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","file":"static/js/40.8fb801e3.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={label}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n","import React from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple'\n\nconst WidgetsDropdown = () => {\n  // render\n  return (\n    <CRow>\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[65, 59, 84, 84, 51, 55, 40]}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[1, 18, 9, 17, 34, 22, 11]}\n              pointHoverBackgroundColor=\"info\"\n              options={{ elements: { line: { tension: 0.00001 }}}}\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle caret={false} color=\"transparent\">\n              <CIcon name=\"cil-location-pin\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-warning\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              className=\"mt-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgba(255,255,255,.2)\"\n              dataPoints={[78, 81, 80, 45, 34, 12, 40]}\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\n              pointHoverBackgroundColor=\"warning\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-danger\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartBarSimple\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgb(250, 152, 152)\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"sourceRoot":""}