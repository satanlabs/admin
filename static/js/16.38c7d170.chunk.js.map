{"version":3,"sources":["Loading.js","Utils/Utils.js","Rest-API/Header.js","views/Statuses/Statuses.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","views/Filevault/Filevault.js"],"names":["Loading","className","color","size","__DOUBLE_COLON__","__CALLED__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","dp","thresh","Math","abs","units","u","r","round","length","toFixed","Logger","fileName","methodName","message","undefined","variableName","variableValue","logData","console","log","goBack","history","back","goHome","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","Failure","props","style","fontSize","detailShow","role","Success","StatusModal","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","Component","FailureModal","ModalFooter","Button","onClick","FILE_NAME","Filevault","uploadMultipleFiles","formData","FormData","index","state","files","append","setState","loadingModalVisible","fetch","then","res","status","failureModalVisible","result","setTimeout","error","getAllDroppedFiles","updatedList","concat","Card","id","onDrop","getRootProps","getInputProps","webkitdirectory","mozdirectory","directory","multiple","border","map","droppedFile","name","path"],"mappings":"6KAAA,0BAQeA,IALC,kBACZ,qBAAKC,UAAU,mCAAf,SACI,cAAC,KAAD,CAAUC,MAAM,UAAUC,KAAK,W,iCCLvC,kPAEMC,EAAmB,MACnBC,EAAa,SAGbC,EAAa,WACfC,OAAOC,SAASC,UAIdC,EAAmB,SAACC,GACtBJ,OAAOK,KAAKD,EAAK,WAGfE,EAAkB,SAACC,EAAkBC,GACvC,IAAIC,EAAyB,GAQ7B,OANAF,EAAiBG,SAAQ,SAACC,IAClBC,EAA6BD,EAAQA,QAASH,IACzCI,EAA6BD,EAAQE,UAAWL,KADUC,EAAuBK,KAAKH,MAK5FF,GAILG,EAA+B,SAACG,EAAQC,GAM1C,OAJAA,GAAW,GACXD,GAFAA,GAAU,IAEME,cAChBD,EAAUA,EAAQC,cAEXF,EAAOG,SAASF,IAG3B,SAASG,EAAcC,GAAuB,IAAhBC,IAAe,yDAANC,EAAM,uDAAH,EAChCC,EAASF,EAAK,IAAO,KAE3B,GAAIG,KAAKC,IAAIL,GAASG,EACpB,OAAOH,EAAQ,KAGjB,IAAMM,EAAQL,EACV,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDM,GAAK,EACHC,EAAC,SAAG,GAAIN,GAEd,GACEF,GAASG,IACPI,QACKH,KAAKK,MAAML,KAAKC,IAAIL,GAASQ,GAAKA,GAAKL,GAAUI,EAAID,EAAMI,OAAS,GAE7E,OAAOV,EAAMW,QAAQT,GAAM,IAAMI,EAAMC,GAK3C,IAAMK,EAAS,SAACC,EAAUC,GAA0F,IAA9EC,EAA6E,4DAAnEC,EAAWC,EAAwD,4DAAzCD,EAAWE,EAA8B,4DAAdF,EAE7FG,EAAUN,EA1DC,MA0DuBC,EA7DjB,MA6DiDpC,EAAaD,EAElFsC,IAAaI,GAAYJ,EAAUtC,GAEhCwC,GACAE,GAAYF,EAAexC,EAC3B2C,QAAQC,IAAIF,EAASD,IAGrBE,QAAQC,IAAIF,IAIdG,EAAS,WACX1C,OAAO2C,QAAQC,QAGbC,EAAS,WACX7C,OAAOK,KAAK,IAAK,W,iCChFrB,0GAEMyC,EAAmB,WACrB,MACI,CACIC,OAAQ,MACRC,QAAS,KAMfC,EAAoB,SAACC,GACvB,MACI,CACIH,OAAQ,OACRC,QAAS,CACL,eAjBiB,oBAmBrBG,KAAMD,IAKZE,EAAwB,SAACF,GAC3B,MACI,CACIH,OAAQ,OACRC,QAAS,GAETG,KAAMD,K,8MC5BZG,EAAU,SAACC,GAAD,OACZ,sBAAK5D,UAAU,+CAAf,UACE,mBAAGA,UAAU,gBAAgB6D,MAAO,CAAE5D,MAAO,MAAO6D,SAAU,UAC9D,8CAEGF,EAAMG,YACH,2FAC0D,8BAOhEhE,EAAU,kBACZ,sBAAKC,UAAU,8BAAf,UACI,uBACA,qBAAKA,UAAU,4BAA4BgE,KAAK,WAC1C,uBACN,qBAAKhE,UAAU,eAAf,2BACA,2BAIFiE,EAAU,kBACZ,sBAAKjE,UAAU,mCAAf,UACI,oBAAIA,UAAU,8BAEd,mBAAGA,UAAU,eAAb,+BCCOkE,E,4JAxBX,WACI,IAAIC,EAAQ,wBAWZ,OATAA,EADoC,GAAhCC,KAAKR,MAAMS,kBACP,cAAC,EAAD,IAEiC,GAAhCD,KAAKR,MAAMS,kBACZ,cAAC,EAAD,IAGA,cAAC,EAAD,IAIR,cAACC,EAAA,EAAD,CAAOC,OAAQH,KAAKR,MAAMY,QAASC,SAAU,SAAUzE,UAAW,gBAAlE,SACI,cAAC0E,EAAA,EAAD,UACA,qBAAK1E,UAAU,mCAAf,SACKmE,Y,GAjBSQ,a,SCsBXC,E,4JAtBX,WACI,OACI,eAACN,EAAA,EAAD,CAAOC,OAAQH,KAAKR,MAAMY,QAASC,SAAU,SAAUzE,UAAW,eAAlE,UACA,cAAC0E,EAAA,EAAD,UACE,qBAAK1E,UAAU,mCAAf,SACE,cAAC,EAAD,CAAS+D,YAAY,QAGzB,eAACc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQ7E,MAAM,YAAY8E,QAAS/B,IAAnC,kBADF,WAGE,cAAC8B,EAAA,EAAD,CAAQ7E,MAAM,YAAY8E,QAAS1E,IAAnC,oBAHF,WAKE,cAACyE,EAAA,EAAD,CAAQ7E,MAAM,YAAd,oBALF,WAOE,cAAC6E,EAAA,EAAD,CAAQ7E,MAAM,UAAU8E,QAAS5B,IAAjC,4B,GAhBawB,aCMrBK,EAAY,eAEZC,E,kDAEJ,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAURsB,oBAAsB,WAGpB,IADA,IAAMC,EAAW,IAAIC,SACbC,EAAQ,EAAGA,EAAQ,EAAKC,MAAMC,MAAMnD,OAAQiD,IAChDF,EAASK,OAAO,QAAS,EAAKF,MAAMC,MAAMF,IAI9C,EAAKI,SAAS,CACZC,qBAAqB,EACrBrB,kBAAmB,IAGrBsB,MAAM,qDAAsDjC,YAAsByB,IACjFS,MAAK,SAAAC,GAA2B,KAAdA,EAAIC,QAAiB,EAAKL,SAAS,CAAEM,qBAAqB,OAC5EH,MACC,SAACI,GACC1D,YAAO0C,EAAW,aAAc,QAAS,SAAUgB,GACnD,EAAKP,SAAS,CACZpB,kBAAmB,IAGrB4B,YAAW,WACT,EAAKR,SAAS,CACZC,qBAAqB,IAEvBrF,gBACE,QAEN,SAAC6F,GACC5D,YAAO0C,EAAW,aAAc,QAAS,QAASkB,GAElD,EAAKT,SAAS,CACZpB,kBAAmB,IAGrB4B,YAAW,WACT,EAAKR,SAAS,CACZC,qBAAqB,EACrBK,qBAAqB,MAErB,SApDS,EAwDnBI,mBAAqB,SAACZ,GACpB,IAAMa,EAAcb,EAAMc,OAAO,EAAKf,MAAMC,OAC5C,EAAKE,SAAS,CACVF,MAAOa,KAxDX,EAAKd,MAAQ,CACTC,MAAO,GACPG,qBAAqB,EACrBrB,kBAAmB,EACnB0B,qBAAqB,GAPR,E,0CA+DjB,WAGE,OAFAzD,YAAO0C,EAAW,SAAU,GAAI,aAAcZ,KAAKkB,OAG/C,eAACgB,EAAA,EAAD,CAAMC,GAAG,aAAT,UACI,sBAAKvG,UAAU,UAAf,UACE,cAAC,IAAD,CAAUwG,OAAQpC,KAAK+B,mBAAvB,SACO,gBAAEM,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACG,kCACI,eAACJ,EAAA,EAAD,2BAAWG,KAAX,cACE,iDAAWC,KAAX,IAA4BC,iBAAiB,EAAMC,cAAc,EAAMC,WAAW,EAAMC,UAAU,KAClG,qBAAK9G,UAAU,SAAf,SACE,gEAAkC,sBAAMA,UAAU,iBAAhB,kCAOlD,cAAC8E,EAAA,EAAD,CAAQC,QAASX,KAAKc,oBAAtB,0BAEA,oDACA,wBAAO6B,OAAS,IAAhB,UACE,gCACE,+BACI,sCACA,0CACA,2CAGN,gCAEK3C,KAAKkB,MAAMC,MAAMnD,OAAS,GACzBgC,KAAKkB,MAAMC,MAAMyB,KAAI,SAACC,EAAa5B,GAAd,OACnB,+BACE,6BAAK4B,EAAYC,OACjB,6BAAKD,EAAYE,OACjB,6BAAK1F,YAAcwF,EAAY/G,UAHxB,MAAQmF,cAa/B,cAAC,EAAD,CAAab,QAASJ,KAAKkB,MAAMI,oBAAqBrB,kBAAmBD,KAAKkB,MAAMjB,oBACpF,cAAC,EAAD,CAAcG,QAASJ,KAAKkB,MAAMS,6B,GAjHxBpB,aAuHTM","file":"static/js/16.38c7d170.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Loading = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <CSpinner color=\"success\" size=\"sm\"/>        \n    </div>\n    ;\nexport default Loading;","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome\n}","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST\n };","import React from 'react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n     Failure,\n     Loading,\n     Success\n    };\n","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","import React, { Component } from 'react';\nimport { Card, Input, Button } from 'reactstrap';\nimport { Logger , reloadPage , humanFileSize } from '../../Utils/Utils';\nimport { requestHeaderGET , requestHeaderFilePOST } from '../../Rest-API/Header';\nimport Loading from \"../../Loading\";\nimport Dropzone from 'react-dropzone';\nimport {useDropzone} from 'react-dropzone';\nimport \"./Filevault.css\";\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\n\nconst FILE_NAME = \"Filevault.js\";\n\nclass Filevault extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        files: [],\n        loadingModalVisible: false,\n        loadingModalState: 0,\n        failureModalVisible: false,\n    };\n  }\n\n  uploadMultipleFiles = () => {\n\n    const formData = new FormData();\n    for(let index = 0; index < this.state.files.length; index++) {\n        formData.append(\"files\", this.state.files[index]);\n    };\n\n    //enable loader modal\n    this.setState({\n      loadingModalVisible: true,\n      loadingModalState: 0\n    });\n\n    fetch(\"http://192.168.1.109/filevault/uploadMultipleFiles\", requestHeaderFilePOST(formData))\n    .then(res => { if (res.status != 200) { this.setState({ failureModalVisible: true }) } })\n    .then(\n      (result) => {\n        Logger(FILE_NAME, \"uploadFile\", \"Fetch\", \"result\", result);\n        this.setState({\n          loadingModalState: 1\n        });\n\n        setTimeout(()=>{\n          this.setState({\n            loadingModalVisible: false\n          });\n          reloadPage();\n        } , 2000);\n      },\n      (error) => {\n        Logger(FILE_NAME, \"uploadFile\", \"Fetch\", \"error\", error);\n\n        this.setState({\n          loadingModalState: 2\n        });\n\n        setTimeout(()=>{\n          this.setState({\n            loadingModalVisible: false,\n            failureModalVisible: true\n          });\n        } , 2000);\n      }\n    );\n  }\n  getAllDroppedFiles = (files) => {\n    const updatedList = files.concat(this.state.files);\n    this.setState({\n        files: updatedList\n    });\n  }\n\n    render() {\n      Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n      return (\n          <Card id=\"FileUpload\">\n              <div className=\"wrapper\">\n                <Dropzone onDrop={this.getAllDroppedFiles} >\n                      {({getRootProps, getInputProps}) => (\n                          <section>\n                              <Card  {...getRootProps()}>\n                                <input {...getInputProps()} webkitdirectory={true} mozdirectory={true} directory={true} multiple={true} />\n                                <div className=\"upload\">\n                                  <p>Drag 'N Drop the files here or <span className=\"upload__button\">Browse</span></p>\n                                </div>\n                              </Card>\n                          </section>\n                      )}\n                  </Dropzone>\n                  \n                  <Button onClick={this.uploadMultipleFiles}>UPLOAD FILES</Button>\n\n                  <h1>Dropped file(s) : </h1>\n                  <table border = \"1\">\n                    <thead>\n                      <tr>\n                          <td>NAME</td>\n                          <td>DIR-path</td>\n                          <td>SIZE</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        (this.state.files.length > 0) &&\n                          this.state.files.map((droppedFile ,index) => \n                            <tr key={\"df_\" + index}>\n                              <td>{droppedFile.name}</td>\n                              <td>{droppedFile.path}</td>\n                              <td>{humanFileSize(droppedFile.size)}</td>\n                            </tr>\n                        )\n                      }\n                    </tbody>\n                  </table>\n\n                  \n              </div>\n              \n              <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n              <FailureModal visible={this.state.failureModalVisible} />\n          </Card>\n          );\n    }\n\n}\nexport default Filevault;"],"sourceRoot":""}