{"version":3,"sources":["views/Reminder/Reminder.js"],"names":["Reminder","props","submitForm","event","preventDefault","console","log","target","newReminderName","value","toggleEndsOnSection","state","isLoaded","reminderEnds","onSubmit","this","type","name","id","required","defaultValue","style","width","height","defaultChecked","onChange","className","color","fontSize","aria-hidden","rows","cols","backgroundColor","placeholder","Component"],"mappings":"2OAUMA,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,WAAa,SAACC,GACVA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,OAAOC,gBAAgBC,QAd1B,EAiBnBC,oBAAsB,SAACP,GACnBE,QAAQC,IAAIH,EAAMI,OAAOE,QAhBzB,EAAKE,MAAQ,CACTC,UAAU,EACVC,cAAc,GAJH,E,qDASnB,c,oBAYA,WACI,OACI,gCACI,mEACA,uBAAMC,SAAUC,KAAKb,WAArB,UAEI,iDACA,uBAAOc,KAAK,OAAOC,KAAK,kBAAkBC,GAAG,kBAAkBC,UAAU,IACzE,uBAAM,uBAEN,wDANJ,UAOW,uBAAOH,KAAK,OAAOC,KAAK,kBAAkBC,GAAG,kBAAkBC,UAAU,IAPpF,UAQW,uBAAOH,KAAK,OAAOC,KAAK,kBAAkBC,GAAG,kBAAkBC,UAAU,IAChF,uBAAM,uBAEN,iDAXJ,qBAYsB,uBAAOH,KAAK,SAASC,KAAK,uBAAuBC,GAAG,uBAAuBE,aAAc,EAAGD,UAAU,IAExH,yBAAQA,UAAU,EAAMF,KAAK,kBAAkBC,GAAG,kBAAlD,UACI,wBAAQT,MAAM,GAAd,4BACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,OAAd,qBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,OAAd,qBACA,wBAAQA,MAAM,QAAd,sBACA,wBAAQA,MAAM,OAAd,wBAEJ,uBAAM,uBAEN,uCACA,uBAAOO,KAAK,WAAWE,GAAG,SAASD,KAAK,SAASI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAUC,eAAgBT,KAAKJ,MAAME,aAAcY,SAAUV,KAAKL,sBACnJ,uBAAM,uBAEN,mBAAGgB,UAAU,iBAAiBL,MAAO,CAAEM,MAAO,MAAOC,SAAU,QAAUC,cAAY,SACrF,yDAA2B,mBAAGR,MAAO,CAAEM,MAAO,MAAOC,SAAU,QAAUF,UAAU,6BAA6BG,cAAY,SAA5H,wEACA,uBACA,0BAAUC,KAAK,IAAIC,KAAK,KAAKb,GAAG,kBAAkBG,MAAO,CAAEW,gBAAiB,WAAaC,YAAY,6BAA6Bd,UAAU,IAC5I,uBAAM,uBAEN,iDACA,uBACA,0BAAUW,KAAK,IAAIC,KAAK,KAAKb,GAAG,kBAAkBG,MAAO,CAAEW,gBAAiB,WAAaC,YAAY,2BAA2Bd,UAAU,IAC1I,uBAAM,uBAEN,uBAAOH,KAAK,SAASP,MAAM,qBAC3B,uBAAOO,KAAK,QAAQP,MAAM,yB,GApEvByB,aA2ERlC","file":"static/js/58.28390448.chunk.js","sourcesContent":["//Reminder.js\n\n/*\n * Reminder\n *\n * List all the features\n */\nimport React, { Component } from 'react';\n\n\nclass Reminder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            reminderEnds: true\n        };\n\n    }\n\n    componentDidMount() {\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        console.log(event.target.newReminderName.value);\n    }\n\n    toggleEndsOnSection = (event) => {\n        console.log(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Submit a new reminder request : -</h1>\n                <form onSubmit={this.submitForm}>\n\n                    <b>REMINDER NAME : </b>\n                    <input type=\"text\" name=\"newReminderName\" id=\"newReminderName\" required={true} />\n                    <br /><br />\n\n                    <b>START REMINDERS AFTER :</b>\n                    DATE : <input type=\"date\" name=\"newReminderDate\" id=\"newReminderDate\" required={true} />\n                    TIME : <input type=\"time\" name=\"newReminderTime\" id=\"newReminderTime\" required={true} />\n                    <br /><br />\n\n                    <b>REMINDER TYPE : </b>\n                    Repeat after every<input type=\"number\" name=\"newReminderFrequency\" id=\"newReminderFrequency\" defaultValue={1} required={true} />\n\n                    <select required={true} name=\"newReminderType\" id=\"newReminderType\">\n                        <option value=\"\">select a value</option>\n                        <option value=\"min\">Minute(s)</option>\n                        <option value=\"hour\">Hour(s)</option>\n                        <option value=\"day\">Day(s)</option>\n                        <option value=\"week\">Week(s)</option>\n                        <option value=\"month\">Month(s)</option>\n                        <option value=\"year\">Year(s)</option>\n                    </select>\n                    <br /><br />\n\n                    <b>Ends ?</b>\n                    <input type=\"checkbox\" id=\"scales\" name=\"scales\" style={{ width: \"20px\", height: \"20px\" }} defaultChecked={this.state.reminderEnds} onChange={this.toggleEndsOnSection} />\n                    <br /><br />\n\n                    <i className=\"fa fa-bullhorn\" style={{ color: \"red\", fontSize: \"50px\" }} aria-hidden=\"true\" />\n                    <b>ACTUAL REMINDER TEXT : (<i style={{ color: \"red\", fontSize: \"20px\" }} className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\" /> CAUTION : THIS WILL BE ACTUALLY ANNOUNCED, via the speaker ... ) </b>\n                    <br />\n                    <textarea rows=\"5\" cols=\"50\" id=\"newReminderText\" style={{ backgroundColor: \"#ffdbde\" }} placeholder=\"Actual reminder message...\" required={true} />\n                    <br /><br />\n\n                    <b>REMINDER NOTES :</b>\n                    <br />\n                    <textarea rows=\"3\" cols=\"50\" id=\"newReminderNote\" style={{ backgroundColor: \"#ffdbde\" }} placeholder=\"Note for the reminder...\" required={true} />\n                    <br /><br />\n\n                    <input type=\"submit\" value=\"Add new reminder\" />\n                    <input type=\"reset\" value=\"Reset form\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Reminder;"],"sourceRoot":""}