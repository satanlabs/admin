{"version":3,"sources":["reusable/DocsLink.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","views/notifications/alerts/Alerts.js"],"names":["DocsLink","props","name","text","rest","_objectWithoutProperties","_excluded","href","concat","_jsx","className","children","CLink","_objectSpread","rel","target","React","memo","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","from","test","_arrayLikeToArray","len","arr2","Alerts","_React$useState","useState","_React$useState2","visible","setVisible","_jsxs","_Fragment","CRow","CCol","xs","md","CCard","CCardHeader","CCardBody","CAlert","color","closeButton","show","onShowChange","CProgress","striped","Number","size","CButton","onClick"],"mappings":"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","file":"static/js/42.84b0b272.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import React from 'react'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst Alerts = () => {\n  const [visible, setVisible] = React.useState(10)\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <DocsLink name=\"CAlert\"/>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                This is a primary alert — check it out!\n              </CAlert>\n              <CAlert color=\"secondary\">\n                This is a secondary alert — check it out!\n              </CAlert>\n              <CAlert color=\"success\">\n                This is a success alert — check it out!\n              </CAlert>\n              <CAlert color=\"danger\">\n                This is a danger alert — check it out!\n              </CAlert>\n              <CAlert color=\"warning\">\n                This is a warning alert — check it out!\n              </CAlert>\n              <CAlert color=\"info\">\n                This is a info alert — check it out!\n              </CAlert>\n              <CAlert color=\"light\">\n                This is a light alert — check it out!\n              </CAlert>\n              <CAlert color=\"dark\">\n                This is a dark alert — check it out!\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> use <code>.alert-link</code> to provide links</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                {/*eslint-disable-next-line*/}\n                This is a primary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                {/*eslint-disable-next-line*/}\n                This is a secondary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                {/*eslint-disable-next-line*/}\n                This is a success alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                {/*eslint-disable-next-line*/}\n                This is a danger alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                {/*eslint-disable-next-line*/}\n                This is a warning alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                {/*eslint-disable-next-line*/}\n                This is a info alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                {/*eslint-disable-next-line*/}\n                This is a light alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                {/*eslint-disable-next-line*/}\n                This is a dark alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> additional content</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> dismissing</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert\n                color=\"info\"\n                closeButton\n              >\n                I am an dismissible alert!\n              </CAlert>\n              <CAlert\n                color=\"warning\"\n                show={visible}\n                closeButton\n                onShowChange={setVisible}\n              >\n                I will be closed in {visible} seconds!\n                <CProgress\n                  striped\n                  color=\"warning\"\n                  value={Number(visible) * 10}\n                  size=\"xs\"\n                  className=\"mb-3\"\n                />\n              </CAlert>\n\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\n                Reset timer\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Alerts\n"],"sourceRoot":""}