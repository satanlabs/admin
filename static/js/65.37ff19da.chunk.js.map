{"version":3,"sources":["views/QRCodeGenerator/QRCodeGenerator.js"],"names":["QRCodeGenerator","props","generateQR","item","setState","isLoaded","size","length","factor","qrValue","resetPage","state","rows","cols","onInput","target","value","this","Component"],"mappings":"sQAKMA,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAQVC,WAAa,SAACC,GAMV,GALA,EAAKC,SAAS,CACVC,UAAU,EACVC,KAAM,IAGPH,EAAKI,OAAS,EAAE,CACf,IAAMC,EAASL,EAAKI,OAAS,IAAM,EAEnC,EAAKH,SAAS,CACVK,QAASN,EACTE,UAAU,EACVC,KAAM,IAAME,MArBN,EA0BlBE,UAAW,WACP,EAAKN,SAAS,CACVK,QAAS,GACTJ,UAAU,EACVC,KAAM,OA5BV,EAAKK,MAAQ,CACTF,QAAS,GACTJ,UAAU,EACVC,KAAM,KALI,E,0CAkClB,WAAU,IAAD,OACL,OACI,eAAC,IAAD,WACI,uDAEA,0BACIM,KAAM,EACNC,KAAM,GACNC,QAAS,SAACX,GAAW,EAAKD,WAAWC,EAAKY,OAAOC,UAErD,uBACA,mDAAuBC,KAAKN,MAAMF,QAAQF,UAC1C,uBAGKU,KAAKN,MAAMN,UACZ,cAAC,IAAD,CACIC,KAAMW,KAAKN,MAAML,KACjBU,MAAOC,KAAKN,MAAMF,iB,GAtDZS,aA+DflB","file":"static/js/65.37ff19da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport QRCode from \"qrcode.react\";\nimport { Card } from 'reactstrap';\n\n\nclass QRCodeGenerator extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            qrValue: \"\",\n            isLoaded: false,\n            size: 128\n        };\n    }\n\n    generateQR = (item) => {\n        this.setState({\n            isLoaded: false,\n            size: 0\n        });\n        \n        if(item.length > 0){\n            const factor = item.length / 250 + 1;\n            \n            this.setState({\n                qrValue: item,\n                isLoaded: true,\n                size: 128 * factor\n            });\n        }\n    }\n\n    resetPage =() => {\n        this.setState({\n            qrValue: \"\",\n            isLoaded: false,\n            size: 128\n        });\n    }\n\n    render() {\n        return (\n            <Card>\n                <h1>QR-Code Generator !!!</h1>\n                \n                <textarea \n                    rows={5}\n                    cols={30}\n                    onInput={(item) => { this.generateQR(item.target.value); }}    \n                />\n                <br />\n                <h3>Char(s). count : { this.state.qrValue.length }</h3>\n                <br />\n\n                {\n                    (this.state.isLoaded) &&\n                    <QRCode \n                        size={this.state.size}\n                        value={this.state.qrValue}\n                    />\n                }\n            </Card>\n        )\n    }\n\n}\n\nexport default QRCodeGenerator;"],"sourceRoot":""}