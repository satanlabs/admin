{"version":3,"sources":["Utils/Utils.js","views/Statuses/Statuses.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","views/Weight/WeightGraph.js"],"names":["__DOUBLE_COLON__","__CALLED__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","dp","thresh","Math","abs","units","u","r","round","length","toFixed","Logger","fileName","methodName","message","undefined","variableName","variableValue","logData","console","log","goBack","history","back","goHome","Failure","props","className","style","color","fontSize","detailShow","Loading","role","Success","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderDELETEWithAuth","StatusModal","basic","this","loadingModalState","isOpen","visible","backdrop","Component","FailureModal","onClick","FILE_NAME","COLORS","initialState","isLoaded","loadingModalVisible","failureModalVisible","weightListData","graphType","graphMode","dataForPlot_weight","WeightList","plotDataForWeight","setState","setTimeout","cleanDataForPlotting","type_of_data","plotDatas","randomColor","floor","random","x","y","state","createdOn","value","type","mode","marker","name","JSON","parse","stringify","document","title","fetchWeightDataList","offset","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","logoutProcedureForLocalStorage","Error","result","code","error","resetStateToDefault","width","innerWidth","height","innerHeight","textAlign","onChange","e","target","reloadData","size","showlegend","layout"],"mappings":"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","file":"static/js/19.fd591b4a.chunk.js","sourcesContent":["const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome\n}","import React from 'react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n     Failure,\n     Loading,\n     Success\n    };\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","import React, { Component } from 'react';\nimport { requestHeaderGETWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, reloadPage } from '../../Utils/Utils';\nimport { Button } from 'reactstrap';\nimport { Loading } from '../Statuses/Statuses';\nimport Plot from 'react-plotly.js';\nimport { CButton } from '@coreui/react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\n\nconst FILE_NAME = \"WeightGraph.js\";\n\nconst COLORS = [\n    \"red\",\"green\",\"blue\",\"#b59a14\",\"#b514a5\",\"black\",\"orange\"\n  ];\n\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    weightListData: null,\n    graphType: \"scatter\",\n    graphMode: \"lines+markers\",\n    dataForPlot_weight : null\n};\n\nclass WeightList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    componentDidMount() {\n        document.title = \"Satanlabs - weight graph page\";\n        this.fetchWeightDataList();\n    }\n\n    fetchWeightDataList(offset) {\n        this.setState({\n            isLoaded: false\n        });\n        let API_URL = 'https://backend.satanlabs.com/nexus/weight/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        weightListData: result.data\n                    });\n                    this.plotDataForWeight();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    plotDataForWeight = () => {\n        this.setState({\n            isLoaded: false\n        });\n\n        setTimeout(() => {\n            this.setState({\n                dataForPlot_weight: this.cleanDataForPlotting(\"weight\"),\n                isLoaded: true\n            });\n        }, 200);\n        \n    }\n\n    cleanDataForPlotting = (type_of_data) => {\n        let plotDatas = [];\n    \n        const randomColor = Math.floor(Math.random() * COLORS.length);\n    \n        let x = [] , y = [];\n        this.state.weightListData.forEach(data => {\n            x.push(data.createdOn);\n            y.push(data.value);\n        });\n    \n        plotDatas.push(\n        {\n            x: [ ...x ],\n            y: [ ...y ],\n            type:this.state.graphType,\n            mode: this.state.graphMode,\n            marker: {color: COLORS[randomColor]},\n            name: `${type_of_data}`\n        }\n        );\n    \n        return plotDatas;\n      }\n\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchWeightDataList();\n    }\n\n    render() {\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n        const width = window.innerWidth * 0.85;\n        const height = window.innerHeight * 0.60;\n\n        return (\n            <div>\n            {\n                <div style={{textAlign:\"right\"}}>\n                <select onChange={e=>{\n                    this.fetchWeightDataList(e.target.value);\n                }}>\n                    <option value=\"\">Select no of items</option>\n                    <option value={0} key={\"all__a\"}>All items</option>\n                    <option value={10} key={\"10__a\"}>10</option>\n                    <option value={100} key={\"100__a\"}>100</option>\n                    <option value={1000} key={\"1000__a\"}>1000</option>\n                    <option value={10000} key={\"10000__a\"}>10000</option>\n                    <option value={100000} key={\"100000__a\"}>10000</option>\n                    <option value={1000000} key={\"1000000__a\"}>1000000</option>\n                </select>\n                </div>\n            }\n            {\n                this.state.isLoaded ? \n                <div>\n                    <h2>Weight data list : </h2>\n                    <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>reloadData</CButton>\n                    <br /><br />\n                    {<div>\n                        <span>\n                            <b>Change Type :</b>&nbsp;&nbsp;\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphType: \"scatter\"}); this.plotDataForWeight(); }}>scatter TYPE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphType: \"bar\"}); this.plotDataForWeight(); }}>bar TYPE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            CURRENT Type : [ { this.state.graphType } ]\n                            <br /><br />\n                        </span>\n                        <span>\n                            <b>Change Mode :</b>&nbsp;&nbsp;\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines\"}); this.plotDataForWeight(); }}>lines MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"danger\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines+markers\"}); this.plotDataForWeight(); }}>lines+markers MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"markers\"}); this.plotDataForWeight(); }}>markers MODE</Button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            CURRENT Mode : [ { this.state.graphMode } ]\n                            <br /><br />\n                        </span>\n                    </div>\n                    }\n                    <Plot\n                        showlegend={false}\n                        data={ this.state.dataForPlot_weight }\n                        layout={ {width, height, title: 'Weight data' } }\n                    />\n                    <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                    <FailureModal visible={this.state.failureModalVisible} />\n                </div> \n                : <Loading />\n            }\n        </div>\n    );\n}\n\n}\n\nexport default WeightList;\n"],"sourceRoot":""}