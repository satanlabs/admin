{"version":3,"sources":["views/QRCodeGenerator/QRCodeGenerator.js"],"names":["QRCodeGenerator","Component","constructor","props","super","generateQR","item","this","setState","isLoaded","size","length","factor","qrValue","resetPage","state","render","_jsxs","Card","children","_jsx","rows","cols","onInput","target","value","QRCode"],"mappings":"6KAAA,qDAKA,MAAMA,UAAwBC,YAE1BC,YAAYC,GACRC,MAAMD,GAAO,KAQjBE,WAAcC,IAMV,GALAC,KAAKC,SAAS,CACVC,UAAU,EACVC,KAAM,IAGPJ,EAAKK,OAAS,EAAE,CACf,MAAMC,EAASN,EAAKK,OAAS,IAAM,EAEnCJ,KAAKC,SAAS,CACVK,QAASP,EACTG,UAAU,EACVC,KAAM,IAAME,GAEpB,GACH,KAEDE,UAAW,KACPP,KAAKC,SAAS,CACVK,QAAS,GACTJ,UAAU,EACVC,KAAM,KACR,EA7BFH,KAAKQ,MAAQ,CACTF,QAAS,GACTJ,UAAU,EACVC,KAAM,IAEd,CA2BAM,SACI,OACIC,eAACC,IAAI,CAAAC,SAAA,CACDC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,YACIC,KAAM,EACNC,KAAM,GACNC,QAAUjB,IAAWC,KAAKF,WAAWC,EAAKkB,OAAOC,MAAM,IAE3DL,cAAA,SACAH,eAAA,MAAAE,SAAA,CAAI,oBAAmBZ,KAAKQ,MAAMF,QAAQF,UAC1CS,cAAA,SAGKb,KAAKQ,MAAMN,UACZW,cAACM,IAAM,CACHhB,KAAMH,KAAKQ,MAAML,KACjBe,MAAOlB,KAAKQ,MAAMF,YAKtC,EAIWb,W","file":"static/js/74.d94ca84b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport QRCode from \"qrcode.react\";\nimport { Card } from 'reactstrap';\n\n\nclass QRCodeGenerator extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            qrValue: \"\",\n            isLoaded: false,\n            size: 128\n        };\n    }\n\n    generateQR = (item) => {\n        this.setState({\n            isLoaded: false,\n            size: 0\n        });\n        \n        if(item.length > 0){\n            const factor = item.length / 250 + 1;\n            \n            this.setState({\n                qrValue: item,\n                isLoaded: true,\n                size: 128 * factor\n            });\n        }\n    }\n\n    resetPage =() => {\n        this.setState({\n            qrValue: \"\",\n            isLoaded: false,\n            size: 128\n        });\n    }\n\n    render() {\n        return (\n            <Card>\n                <h1>QR-Code Generator !!!</h1>\n                \n                <textarea \n                    rows={5}\n                    cols={30}\n                    onInput={(item) => { this.generateQR(item.target.value); }}    \n                />\n                <br />\n                <h3>Char(s). count : { this.state.qrValue.length }</h3>\n                <br />\n\n                {\n                    (this.state.isLoaded) &&\n                    <QRCode \n                        size={this.state.size}\n                        value={this.state.qrValue}\n                    />\n                }\n            </Card>\n        )\n    }\n\n}\n\nexport default QRCodeGenerator;"],"sourceRoot":""}