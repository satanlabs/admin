{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Loading.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/extends.js","views/CoronaGraph/CoronaGraph.js"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","_toConsumableArray","arrayLikeToArray","iter","Loading","_jsx","className","children","CSpinner","color","size","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","_extends","module","exports","assign","bind","target","arguments","source","key","hasOwnProperty","__esModule","apply","this","types_of_data","graphScales","graphTypes","graphModes","COLORS","CoronaGraph","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","cleanDataForPlotting","type_of_data","plotDatas","count","state","selectedCountries","forEach","selectedCountry","x","y","rawData","data","date","concat","type","graphType","mode","graphMode","marker","plotDataForSelectedCountries","setState","isLoaded","setTimeout","dataForPlot_new_cases","dataForPlot_new_deaths","dataForPlot_total_cases","dataForPlot_total_deaths","isLocationDataLoaded","isCoronaDataLoaded","graphScale","countriesData","_createClass","_this2","fetch","then","res","json","result","country","_objectSpread","label","error","console","log","_this3","FILE_NAME","width","window","innerWidth","height","innerHeight","_jsxs","Select","isMulti","isClearable","onChange","e","options","Button","onClick","Plot","showlegend","layout","title","yaxis","Component"],"mappings":"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","file":"static/js/20.5d8be524.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Loading = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <CSpinner color=\"success\" size=\"sm\"/>\n    </div>\n    ;\nexport default Loading;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nimport Select from 'react-select';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Loading from '../../Loading';\n/*\n\n# CORONA DATA UPDATION SCRIPT\n# https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.json\n\nwget https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.json\n\nmv owid-covid-data.json corona_full_data.json\n\nmv corona_full_data.json /usr/lib/tomcat/apache-tomcat-8.5.35/webapps/assets/json/\n\necho \"updated corona data on -  $(date)\" > corona_update.json\n\n\n\n\n*/\n\nconst FILE_NAME = \"CoronaGraph.js\";\n\nconst CORONA_DATA_API = \"http://192.168.1.109/assets/json/corona_full_data.json\";\nconst LOCATION_API = \"http://192.168.1.109/assets/json/all_countries_iso.json\";\n\n// const CORONA_DATA_API = \"http://localhost:3000/assets/json/corona_full_data.json\";\n// const LOCATION_API = \"http://localhost:3000/assets/json/all_countries_iso.json\";\n\nconst types_of_data = [\n  \"new_cases\",\n  \"new_deaths\",\n  \"total_cases\",\n  \"total_deaths\"\n];\n\nconst graphScales = [ \"log\" , \"linear\" ];\nconst graphTypes  = [ \"scatter\" , \"bar\" ];\nconst graphModes  = [ \"lines\" , \"lines+markers\" , \"markers\" ];\n\nconst COLORS = [\n  \"red\",\"green\",\"blue\",\"#b59a14\",\"#b514a5\",\"black\",\"orange\"\n];\n\n\nclass CoronaGraph extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLocationDataLoaded: false,\n        isCoronaDataLoaded: false,\n        isLoaded: false,\n        graphScale: graphScales[1],\n        graphType: graphTypes[0],\n        graphMode: graphModes[1],\n        countriesData: [],\n        rawData: [],\n        selectedCountries: [],\n        dataForPlot_new_cases: {},\n        dataForPlot_new_deaths: {},\n        dataForPlot_total_cases: {},\n        dataForPlot_total_deaths: {}\n    };\n  }\n\n  componentDidMount(){\n      fetch(LOCATION_API)\n      .then(res => res.json())\n      .then(\n          (result) => {\n              //console.table(result);\n\n              let countriesData = [];\n              result.forEach( (country , i) => {\n                countriesData.push({value: country[\"alpha-3\"], label: country.name , ...country});\n              });\n              this.setState({\n                countriesData,\n                isLocationDataLoaded: true\n              });\n          },\n          (error) => {\n            console.log(\"ERROR :\" ,error);\n          }\n      );\n\n      fetch(CORONA_DATA_API)\n      .then(res => res.json())\n      .then(\n          (result) => {\n              //console.table(result);\n              this.setState({\n                rawData: result,\n                isCoronaDataLoaded: true\n              });\n          },\n          (error) => {\n            console.log(\"ERROR :\" ,error);\n          }\n      );\n  }\n\n  cleanDataForPlotting = (type_of_data) => {\n    let plotDatas = [];\n    let count = 0;\n\n    this.state.selectedCountries.forEach(selectedCountry => {\n      let x = [] , y = [];\n\n      const selectedCountryData = this.state.rawData[selectedCountry.value];\n      selectedCountryData.data.forEach(data => {\n        x.push(data.date);\n        y.push(data[type_of_data])\n      });\n\n      plotDatas.push(\n        {\n          x: [ ...x ],\n          y: [ ...y ],\n          type:this.state.graphType,\n          mode: this.state.graphMode,\n          marker: {color: COLORS[++count]},\n          name: `${selectedCountry.name} - ${type_of_data}`\n        }\n      );\n\n    });\n    \n    return plotDatas;\n  }\n\n  plotDataForSelectedCountries = () => {\n    if(this.state.selectedCountries.length == 0)\n      return;\n\n    this.setState({isLoaded:false});\n    setTimeout(()=>{\n      this.setState({\n        dataForPlot_new_cases: this.cleanDataForPlotting(types_of_data[0]),\n        dataForPlot_new_deaths: this.cleanDataForPlotting(types_of_data[1]),\n        dataForPlot_total_cases: this.cleanDataForPlotting(types_of_data[2]),\n        dataForPlot_total_deaths: this.cleanDataForPlotting(types_of_data[3]),\n        isLoaded: true\n      });\n    },250);\n    \n  }\n\n  render() {\n    console.log( FILE_NAME + \" render() : this.state :\" ,this.state);\n    const width = window.innerWidth * 0.94;\n    const height = window.innerHeight * 0.94;\n\n    return (\n      (this.state.isLocationDataLoaded && this.state.isCoronaDataLoaded) ? \n      <div>\n        <h1>Corona Graph Page</h1>\n        <br />\n\n        SELECT THE COUNTRIES : (or even a single one )\n        <Select\n          isMulti={true}\n          isClearable={true}\n          onChange={(e) =>{this.setState({selectedCountries : e});}} \n          options={this.state.countriesData}\n        />\n        <br />\n        <Button color=\"success\" size=\"lg\" onClick={this.plotDataForSelectedCountries}>Plot Data on Graph</Button>\n        <br /><br />\n\n        {\n          this.state.isLoaded &&\n          (<div>\n            <span>\n              <b>Change Scale :</b>&nbsp;&nbsp;\n              <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphScale:\"linear\"})}}>LINEAR SCALE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphScale:\"log\"})}}>LOG SCALE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              CURRENT Scale : [ { this.state.graphScale } ]\n              <br /><br />\n            </span>\n\n            <span>\n              <b>Change Type :</b>&nbsp;&nbsp;\n              <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphType: \"scatter\"}); this.plotDataForSelectedCountries(); }}>scatter TYPE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphType: \"bar\"}); this.plotDataForSelectedCountries(); }}>bar TYPE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              CURRENT Type : [ { this.state.graphType } ]\n              <br /><br />\n            </span>\n\n            <span>\n              <b>Change Mode :</b>&nbsp;&nbsp;\n              <Button color=\"primary\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines\"}); this.plotDataForSelectedCountries(); }}>lines MODE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <Button color=\"danger\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"lines+markers\"}); this.plotDataForSelectedCountries(); }}>lines+markers MODE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <Button color=\"warning\" size=\"lg\" onClick={()=>{this.setState({graphMode: \"markers\"}); this.plotDataForSelectedCountries(); }}>markers MODE</Button>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              CURRENT Mode : [ { this.state.graphMode } ]\n              <br /><br />\n            </span>\n\n            <Plot\n              showlegend={false}\n              data={ this.state.dataForPlot_total_cases }\n              layout={ {width, height , title: 'Total cases', yaxis: {type: this.state.graphScale }} }\n            />\n\n            <br /><hr />\n\n            <Plot\n              showlegend={false}\n              data={ this.state.dataForPlot_total_deaths }\n              layout={ {width, height, title: 'Total Deaths', yaxis: {type: this.state.graphScale }} }\n            />\n\n            <br /><hr />\n\n            <Plot\n              showlegend={false}\n              data={ this.state.dataForPlot_new_cases }\n              layout={ {width, height, title: 'New cases - Daily' } }\n            />\n\n            <br /><hr />\n\n            <Plot\n              showlegend={false}\n              data={ this.state.dataForPlot_new_deaths }\n              layout={ {width, height, title: 'New Deaths - Daily' } }\n            />\n            \n            \n          </div> )\n        }\n\n      </div> : <Loading />\n    );\n  }\n}\n\nexport default CoronaGraph;\n"],"sourceRoot":""}