{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","Utils/Enums.js","views/expenses/ItemInputForm.js","views/BasicRepetitiveComponents/FormRelated.js","views/expenses/ExpenseCreate.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","copyStringToClipboard","someStr","navigator","clipboard","writeText","findCostPer","quantity","amount","perQuantity","final","concat","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","Component","render","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","FailureModal","ModalFooter","Button","onClick","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","unitOfMeasurementsList","value","label","categoryTypesList","commodityTypesList","yesAndNoList","backendValue","paymentInstrumentsList","paymentBanksList","expenseModesList","FILE_NAME","initialState","isLoaded","unitOfMeasurement","ItemInputForm","constructor","super","state","JSON","parse","stringify","componentDidMount","borderStyle","borderColor","padding","margin","CIcon","size","name","itemIndex","CTooltip","content","float","confirm","onItemDeletion","Select","onChange","choice","onProductNameSelection","setState","options","productListDataSelectTagSpecific","placeholder","isClearable","CInputGroup","CInput","autoComplete","type","step","required","find","MANDATORY_DENOTER_RED_STAR","loadingModalVisible","failureModalVisible","locationListData","locationListDataSelectTagSpecific","storeListData","storeListDataSelectTagSpecific","categoryListData","productListData","dynamicItemList","newExpenseData","storeId","locationId","paymentInstrument","paymentBank","mode","ExpenseCreate","addMoreItemInputForm","tempDynamicItemList","productId","index","submitCreateExpenseForm","event","preventDefault","reqData","dateAndTimeOfPurchase","target","inputDateOfPurchase","inputTimeOfPurchase","extraNotes","inputExtraNotes","tags","inputTags","payment","totalAmount","inputTotalAmount","validationResult","doesStateContainAllRequiredExpenseParams","alert","bank","itemsDataList","element","document","getElementById","items","callCreateExpenseApi","title","fetchLocationDataList","resetStateToDefault","reloadData","API_URL","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","Error","code","map","fetchStoreDataList","error","fetchCategoryDataList","fetchProductDataList","product","category","categoryId","reloadSupportingData","newExpense","copyAndNotify","expenseTypeForEjipuraRentHouse","toast","CButton","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroupPrepend","CInputGroupText","defaultValue","moment","format","item","CTextarea","rows","xs","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"mappings":"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","file":"static/js/19.b691fa23.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // if(localStorage.logsEnabled !== 'true') \n    //     return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nconst copyStringToClipboard = (someStr) => {\n    //console.log('copyStringToClipboard() : someStr = ', someStr);\n    // alert('clipboard added = ' + someStr);\n    navigator.clipboard.writeText(someStr);\n}\n\nconst findCostPer = (quantity, amount, perQuantity) => {\n    const final = ( amount / quantity ) * perQuantity;\n    console.log(`quantity = ${quantity}, amount = ${amount}, perQuantity = ${perQuantity}, final = ${final}`);\n    return final;\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById,\n    copyStringToClipboard,\n    findCostPer\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","/* Contains all the enums */\n\nconst fileTypeArray = [\n    {\n        id: 1,\n        commonName: \"pdf\",\n        shortForm: \"PDF\",\n        fullForm: \"Portable Document Format\"\n    },\n    {\n        id: 2,\n        commonName: \"xls\",\n        shortForm: \"XLS\",\n        fullForm: \"Microsoft Excel file\"\n    },\n    {\n        id: 3,\n        commonName: \"csv\",\n        shortForm: \"CSV\",\n        fullForm: \"Comma-Separated Values\"\n    }\n];\n\nconst getFileTypeById = (id) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.id == id;\n    })\n};\nconst getFileTypeByName = (name) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.name == name;\n    })\n};\n\n\n/* EXPENSE related enums */\n\n\nconst unitOfMeasurementsList = [\n    {\n        value:\"MILLILITER\",\n        label: \"MILLILITER 💧\"\n    },\n    {\n        value:\"GRAM\",\n        label: \"GRAM 🍎\"\n    },\n    {\n        value:\"COUNT\",\n        label: \"COUNT 🥚\"\n    }\n];\n\nconst categoryTypesList = [\n    {\n        value:\"ON_DEMAND\",\n        label: \"ON_DEMAND\"\n    },\n    {\n        value:\"BILL\",\n        label: \"BILL\"\n    }\n];\n\nconst commodityTypesList = [\n    {\n        value:\"PRODUCT\",\n        label: \"PRODUCT 🍎\"\n    },\n    {\n        value:\"SERVICE\",\n        label: \"SERVICE\"\n    }\n];\n\nconst yesAndNoList = [\n    {\n        value:\"YES\",\n        label: \"YES ✅\",\n        backendValue: true\n    },\n    {\n        value:\"NO\",\n        label: \"NO ❌\",\n        backendValue: false\n    }\n];\n\nconst paymentInstrumentsList = [\n    {\n        value:\"UPI\",\n        label: \"UPI 🇮🇳 🧾\"\n    },\n    {\n        value:\"NET_BANKING\",\n        label: \"NET BANKING 🔗\"\n    },\n    {\n        value:\"CREDIT_CARD\",\n        label: \"CREDIT CARD 💳 \"\n    },\n    {\n        value:\"DEBIT_CARD\",\n        label: \"DEBIT CARD 💳 🏧\"\n    },\n    {\n        value:\"CASH\",\n        label: \"CASH 💰 💵\"\n    },\n];\n\n\nconst paymentBanksList = [\n    {\n        value:\"SBI\",\n        label: \"SBI\"\n    },\n    {\n        value:\"AXIS\",\n        label: \"AXIS\"\n    },\n];\n\nconst expenseModesList  = [\n    {\n        value:\"ONLINE\",\n        label: \"ONLINE 🔗\"\n    },\n    {\n        value:\"STORE_BOUGHT\",\n        label: \"STORE_BOUGHT 🏪\"\n    },\n];\n\nexport {\n    fileTypeArray,\n    getFileTypeById,\n    getFileTypeByName,\n\n    unitOfMeasurementsList,\n    categoryTypesList,\n    commodityTypesList,\n    yesAndNoList,\n\n    paymentInstrumentsList,\n    paymentBanksList,\n    expenseModesList\n\n};\n","import React, { Component } from 'react';\nimport {CInput, CInputGroup, CTooltip} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport Select from 'react-select';\nimport { Logger } from 'src/Utils/Utils';\nimport { unitOfMeasurementsList } from 'src/Utils/Enums';\n\n//default\nconst FILE_NAME = \"ItemInputForm.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    unitOfMeasurement: null\n};\n\nconst propsItems = {\n    itemIndex: 'item',\n    onItemDeletion: 'function',\n    onProductNameSelection: 'function',\n    productListDataSelectTagSpecific: 'item'\n};\n\nclass ItemInputForm extends Component { //dynamic input form for `item-data`.\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    componentDidMount() {\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n        Logger(FILE_NAME, \"render\", \"\", \"this.props\", this.props);\n\n        return (\n            <div style={{\n                borderStyle:\"solid\",\n                borderColor:\"red\",\n                padding: \"10px 10px 10px 10px\",\n                margin: \"0px 0px 10px 0px\"\n            }}>\n                <h5><CIcon size='lg' name=\"cilMoney\" />&nbsp;&nbsp;Item #{this.props.itemIndex + 1} :\n                <CTooltip content='🗑️ Delete this item'>\n                    <span style={{float: 'right', borderStyle:'solid', borderColor:'black', padding: '3px'}} onClick={() => {\n                        if(window.confirm(\"Surely want to DELETE item #\" + (this.props.itemIndex + 1) + \" ?\"))\n                            this.props.onItemDeletion(this.props.itemIndex);\n                        }}>❌ 🗑️</span>\n                </CTooltip>\n                </h5>\n\n                <Select \n                    onChange={(choice) => {\n                        this.props.onProductNameSelection(choice, this.props.itemIndex);\n                        this.setState({\n                            unitOfMeasurement: (choice === null) ? null : choice.unitOfMeasurement\n                        });\n                    }}\n                    options={this.props.productListDataSelectTagSpecific}\n                    placeholder='Product name'\n                    isClearable={true}\n                />\n                <CInputGroup className=\"mb-3\">\n                    <CInput\n                        placeholder=\"Quantity\" \n                        autoComplete=\"on\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        id={\"inputItemQuantity_\" + this.props.itemIndex}\n                        label=\"Quantity\"\n                        required\n                    />&nbsp;&nbsp;\n                    <b>\n                        {(this.state.unitOfMeasurement === null) ? \"~\" \n                        : unitOfMeasurementsList.find(unitOfMeasurement => unitOfMeasurement.value === this.state.unitOfMeasurement).label \n                        }\n                    </b> &nbsp;&nbsp;\n                    <CInput\n                        placeholder=\"Amount\" \n                        autoComplete=\"on\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        id={\"inputItemAmount_\" + this.props.itemIndex}\n                        label=\"Amount\"\n                        required\n                    />&nbsp;&nbsp; <b>INR ₹</b> &nbsp;&nbsp;\n                </CInputGroup>\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default ItemInputForm;\n","import React from 'react';\n\n\nconst MANDATORY_DENOTER_RED_STAR = () => <b style={{color:'red'}}>*</b>;\n\nexport {\n    MANDATORY_DENOTER_RED_STAR\n}","import React, { Component } from 'react';\nimport { requestHeaderGETWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, reloadPage, copyStringToClipboard } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,  \n    CTextarea} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport Select from 'react-select';\nimport { expenseModesList, paymentBanksList, paymentInstrumentsList, yesAndNoList } from 'src/Utils/Enums';\nimport ItemInputForm from './ItemInputForm';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\nimport moment from 'moment';\nimport { MANDATORY_DENOTER_RED_STAR } from '../BasicRepetitiveComponents/FormRelated';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//default\nconst FILE_NAME = \"ExpenseCreate.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    locationListData: [],\n    locationListDataSelectTagSpecific: [],\n    storeListData: [],\n    storeListDataSelectTagSpecific: [],\n    categoryListData: [],\n    productListData: [],\n    productListDataSelectTagSpecific: [],\n\n    dynamicItemList: [],\n    newExpenseData: {\n        storeId: null,\n        locationId: null,\n        paymentInstrument: null,\n        paymentBank: null,\n        mode: null\n    }\n};\n\n\nclass ExpenseCreate extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Expenses - Create\";\n        this.fetchLocationDataList();\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchLocationDataList();\n    }\n\n    fetchLocationDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/location/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const locationListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        locationListData: result.data,\n                        locationListDataSelectTagSpecific\n                    });\n                    this.fetchStoreDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchStoreDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/store/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const storeListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        storeListData: result.data,\n                        storeListDataSelectTagSpecific\n                    });\n                    this.fetchCategoryDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchCategoryDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/category/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        categoryListData: result.data\n                    });\n                    this.fetchProductDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchProductDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/product/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const productListDataSelectTagSpecific = result.data.map((product) => {\n                        return {\n                            value: product.id,\n                            label: product.name,\n                            unitOfMeasurement: this.state.categoryListData.find(category => category.id === product.categoryId).unitOfMeasurement\n                        };\n                    });\n                    this.setState({\n                        isLoaded: true,\n                        productListData: result.data,\n                        productListDataSelectTagSpecific\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    reloadSupportingData() {\n        this.setState({\n            locationListData: [],\n            locationListDataSelectTagSpecific: [],\n        });\n        this.fetchLocationDataList();\n    }\n\n    addMoreItemInputForm = () => {\n        const { dynamicItemList } = this.state;\n        let tempDynamicItemList = dynamicItemList;\n        tempDynamicItemList.push({\n            productId: null\n        });\n\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    };\n\n    onProductNameSelection = (choice, index) => {//index start from 0\n        console.log('onProductNameSelection() : choice = ', choice, \" itemIndex = \", index);\n        const { dynamicItemList } = this.state;\n        let tempDynamicItemList = dynamicItemList;\n        tempDynamicItemList[index].productId = (choice === null) ? null : choice.value;\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    }\n\n    onItemDeletion = (itemIndex) => {\n        return; // STILL WIP\n        console.log('onItemDeletion() : itemIndex = ', itemIndex);\n        this.setState({ dynamicItemList: [] });\n\n        let tempDynamicItemList = [];\n        for(let i = 0 ; i < this.state.dynamicItemList.length; i++) {\n            if(i !== itemIndex)\n                tempDynamicItemList.push(this.state.dynamicItemList[i]);\n        }\n        tempDynamicItemList.forEach(i => console.log(i));\n\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    }\n\n    submitCreateExpenseForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            dateAndTimeOfPurchase: event.target.inputDateOfPurchase.value + \" \" + event.target.inputTimeOfPurchase.value,\n            extraNotes: event.target.inputExtraNotes.value,\n            tags: event.target.inputTags.value,\n            payment: {\n                totalAmount: event.target.inputTotalAmount.value\n            }\n        };\n\n        const validationResult = this.doesStateContainAllRequiredExpenseParams();\n        if(validationResult !== null) {\n            alert(validationResult + \" . ℹ️ Form validation failed.\");\n            return;\n        }\n        reqData.mode = this.state.newExpenseData.mode;\n        reqData.storeId = this.state.newExpenseData.storeId;\n        reqData.locationId = this.state.newExpenseData.locationId;\n        reqData.payment.paymentInstrument = this.state.newExpenseData.paymentInstrument;\n        reqData.payment.bank = this.state.newExpenseData.paymentBank;\n\n        const itemsDataList = [];\n        this.state.dynamicItemList.forEach((element, index) => {\n            itemsDataList.push({\n                productId: element.productId,\n                quantity: document.getElementById('inputItemQuantity_' + index).value,\n                amount: document.getElementById('inputItemAmount_' + index).value,\n            })\n        });\n        reqData.items = itemsDataList;\n\n        Logger(FILE_NAME, \"submitCreateExpenseForm\", \"\", \"reqData\", reqData);\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n        this.callCreateExpenseApi(reqData);\n    }\n\n    doesStateContainAllRequiredExpenseParams() {\n        if(this.state.newExpenseData.paymentInstrument === null)\n            return \"Payment-Instrument NOT selected\";\n\n        if(this.state.newExpenseData.paymentInstrument !== paymentInstrumentsList[4].value &&\n            this.state.newExpenseData.paymentBank === null)\n            return \"Bank NOT selected, for NON-CASH payments\";\n        if(this.state.newExpenseData.mode === null)\n            return \"MODE NOT selected\";\n        if(this.state.newExpenseData.storeId === null)\n            return \"STORE not selected\";\n        if(this.state.newExpenseData.mode === \"ONLINE\" && this.state.newExpenseData.locationId === null)\n            return \"order-Location NOT selected for online order\";\n        if(this.state.dynamicItemList.length < 1)\n            return \"No item added in the expense\";\n\n        return null;\n    }\n\n    callCreateExpenseApi(newExpense) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/expense/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newExpense), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callCreateExpenseApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callCreateExpenseApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    copyAndNotify(expenseTypeForEjipuraRentHouse) {\n        copyStringToClipboard(expenseTypeForEjipuraRentHouse);\n         toast(\"✅ 📋 COPIED \" + expenseTypeForEjipuraRentHouse + \" to clipboard !\");\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (            \n                this.state.isLoaded ? \n                <div>\n                    <h1>Create a new Expense \n                        <br />\n                        <div style={{\n                            borderStyle:\"solid\",\n                            borderColor:\"#ff9100\",\n                            padding: \"10px 10px 10px 10px\",\n                            margin: \"0px 0px 10px 0px\"\n                        }}>\n                            <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                            <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadSupportingData()}>Reload Supporting Data(background)</CButton>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                            <CButton color=\"danger\" className=\"px-4\" onClick={() => { window.open('./#/price_tracker/expense/view', '_self'); }}> 🔗 View expenses</CButton>\n                        </div>\n                    </h1>\n                    <br />\n\n                    {\n                    /* Create new Expense */\n                    <CContainer>\n                        <CRow className=\"justify-content-center\">\n                            <CCol md=\"8\">\n                                <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardBody>\n                                    <CForm onSubmit={this.submitCreateExpenseForm}>\n\n                                        <div style={{\n                                            borderStyle:\"solid\",\n                                            borderColor:\"blue\",\n                                            padding: \"10px 10px 10px 10px\",\n                                            margin: \"0px 0px 10px 0px\"\n                                        }}>\n                                            <h4><CIcon size='lg' name=\"cilCalendar\" />&nbsp;&nbsp; <u>Date and time of Purchase :</u> <MANDATORY_DENOTER_RED_STAR /></h4>\n                                            <p>⛔️ ℹ️ : <i>date format on UI is : DD/MM/YYYY</i></p>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CInputGroupPrepend>\n                                                    <CInputGroupText>\n                                                    <CIcon name=\"cilCalendar\" /> \n                                                    </CInputGroupText>\n                                                </CInputGroupPrepend>\n                                                <CInput\n                                                    placeholder=\"Date Of Purchase\" \n                                                    autoComplete=\"on\"\n                                                    type=\"date\"\n                                                    defaultValue={new moment().format('YYYY-MM-DD')} //2020-03-08\n                                                    step=\"any\"\n                                                    id=\"inputDateOfPurchase\"\n                                                    label=\"Date Of Purchase\"\n                                                    required\n                                                />\n                                                <CInput\n                                                    placeholder=\"Time Of Purchase\" \n                                                    autoComplete=\"on\"\n                                                    type=\"time\"\n                                                    step=\"any\"\n                                                    id=\"inputTimeOfPurchase\"\n                                                    label=\"Time Of Purchase\"\n                                                    required\n                                                />\n                                            </CInputGroup>\n                                        </div>\n\n                                        <div style={{\n                                            borderStyle:\"solid\",\n                                            borderColor:\"green\",\n                                            padding: \"10px 10px 10px 10px\",\n                                            margin: \"0px 0px 10px 0px\"\n                                        }}>\n                                            <h4><CIcon size='lg' name=\"cilDollar\" /><CIcon size='lg' name=\"cilEuro\" />&nbsp;&nbsp; <u>Payment related data :</u></h4>\n\n                                            <h5><CIcon size='lg' name=\"cibPaypal\" />&nbsp;&nbsp;Payment instrument : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <Select \n                                                onChange={(choice) => {\n                                                    const newExpenseData = this.state.newExpenseData;\n                                                    newExpenseData.paymentInstrument = (choice === null) ? null : choice.value;\n                                                    this.setState({\n                                                        newExpenseData\n                                                    });\n                                                }}\n                                                options={paymentInstrumentsList}\n                                                isClearable={true}\n                                            />\n                                            <br />\n\n                                            <h5><CIcon size='lg' name=\"cilBank\" />&nbsp;&nbsp;Bank : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <Select \n                                                onChange={(choice) => {\n                                                    const newExpenseData = this.state.newExpenseData;\n                                                    newExpenseData.paymentBank = (choice === null) ? null : choice.value;\n                                                    this.setState({\n                                                        newExpenseData\n                                                    });\n                                                }}\n                                                options={paymentBanksList}\n                                                isClearable={true}\n                                            />\n                                            <br />\n\n                                            <h5><CIcon size='lg' name=\"cilMoney\" />&nbsp;&nbsp;Total amount paid : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <CInputGroup className=\"mb-3\">\n                                                \n                                                <CInput\n                                                    placeholder=\"Total amount\" \n                                                    autoComplete=\"on\"\n                                                    type=\"number\"\n                                                    step=\"0.01\"\n                                                    id=\"inputTotalAmount\"\n                                                    label=\"Total amount\"\n                                                    required\n                                                />\n                                            </CInputGroup>\n                                        </div>\n\n                                        <h4><CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Expense mode : <MANDATORY_DENOTER_RED_STAR /></h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.mode = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={expenseModesList}\n                                            isClearable={true}\n                                        />\n                                        <br />\n\n                                        <h4><CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Store : <MANDATORY_DENOTER_RED_STAR /></h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.storeId = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={this.state.storeListDataSelectTagSpecific}\n                                            isClearable={true}\n                                        />\n                                        <br />\n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Location :\n                                            <h6>{(this.state.newExpenseData.mode === 'STORE_BOUGHT') ? \"⛔️ ℹ️ Not reqd. for store-bought items\" : \"\" } </h6>\n                                        </h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.locationId = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={this.state.locationListDataSelectTagSpecific}\n                                            isClearable={true}\n                                        />\n                                        <br />\n\n                                        {/* ADDED for managing+tracking EjipuraRentHouse expense */}\n                                        {\n                                            ['personal_arsh', 'for_ejipura_house']\n                                            .map((item, index) => {\n                                                return <span>\n                                                    <CButton color=\"danger\" className=\"px-0\" onClick={() => this.copyAndNotify(item)}>&nbsp;📋 {item}&nbsp;</CButton>\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                                                    </span>\n                                            })\n                                        }\n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilPencil\" />&nbsp;&nbsp; Notes : \n                                        </h4>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CInputGroupPrepend>\n                                                <CInputGroupText>\n                                                    <CIcon name=\"cilPencil\" />\n                                                </CInputGroupText>\n                                            </CInputGroupPrepend>\n                                            <CTextarea  \n                                                placeholder='Some extra notes 📝 (not-mandatory)' \n                                                id=\"inputExtraNotes\" \n                                                rows=\"3\"\n                                            />\n                                        </CInputGroup>\n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilTags\" />&nbsp;&nbsp; Tags :\n                                        </h4>\n                                        <CInput\n                                            placeholder=\"tags 🏷️ 🔖 (not-mandatory)\" \n                                            autoComplete=\"on\"\n                                            step=\"any\"\n                                            id=\"inputTags\"\n                                            label=\"expense-tags\"\n                                            required='false'\n                                        />\n                                        <br />\n\n                                        {/* dynamic items input-list */}\n                                        <div>\n                                        {\n                                        this.state.dynamicItemList.length >= 1 &&\n                                        this.state.dynamicItemList.map((item, index) => {\n                                            return (\n                                            <ItemInputForm \n                                                key={\"itemInputFormComponent_\" + index}\n                                                data={item}\n                                                {...this.props}\n                                                itemIndex={index} // starts from 0\n                                                productListDataSelectTagSpecific={this.state.productListDataSelectTagSpecific}\n                                                onProductNameSelection={this.onProductNameSelection}\n                                                onItemDeletion={this.onItemDeletion}\n                                            />\n                                            );\n                                        })}\n                                        </div>\n                                        <CButton color=\"info\" className=\"px-4\" onClick={this.addMoreItemInputForm}>Add item ➕ </CButton>\n                                        &nbsp;&nbsp;\n                                        <span><b>Current ITEM Count (Σ) = {this.state.dynamicItemList.length}</b></span>\n                                        <br /><br />\n\n                                        <CRow>\n                                            <CCol xs=\"6\">\n                                                <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                            </CCol>\n                                            <CCol xs=\"6\" className=\"text-right\">\n                                                <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                            </CCol>\n                                        </CRow>\n                                    </CForm>\n                                    </CCardBody>\n                                </CCard>\n                                </CCardGroup>\n                            </CCol>\n                        </CRow>\n                        <ToastContainer\n                            position=\"bottom-center\"\n                            autoClose={500}\n                            hideProgressBar={false}\n                            newestOnTop={false}\n                            closeOnClick\n                            rtl={false}\n                            pauseOnFocusLoss\n                            draggable\n                            pauseOnHover\n                            theme=\"light\"\n                            />\n                    </CContainer>   \n                    }\n\n                <br /><br />\n                    <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                    <FailureModal visible={this.state.failureModalVisible} />\n                </div>\n                : <Loading />\n        );\n    }\n}\n\nexport default ExpenseCreate;\n\n"],"sourceRoot":""}