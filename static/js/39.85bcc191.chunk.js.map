{"version":3,"sources":["reusable/DocsLink.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","views/base/navbars/Navbars.js"],"names":["DocsLink","props","name","text","rest","_objectWithoutProperties","_excluded","href","concat","_jsx","className","children","CLink","_objectSpread","rel","target","React","memo","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","from","test","_arrayLikeToArray","len","arr2","CNavbars","_useState","useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","isOpenDropdown","setIsOpenDropdown","_useState5","_useState6","navbarText","setNavbarText","_jsxs","_Fragment","CCard","CCardHeader","CCardBody","CNavbar","expandable","color","CToggler","inNavbar","onClick","CNavbarBrand","CCollapse","show","navbar","CNavbarNav","CNavLink","CForm","inline","CInput","placeholder","size","CButton","type","CDropdown","inNav","CDropdownToggle","CDropdownMenu","CDropdownItem","light","CImg","src","alt","toggleable","CNavbarText"],"mappings":"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","file":"static/js/39.85bcc191.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNavbar,\n  CNavbarNav,\n  CNavbarBrand,\n  CNavbarText,\n  CToggler,\n  CNavLink,\n  CDropdown,\n  CForm,\n  CInput,\n  CButton,\n  CImg\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst CNavbars = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false)\n  const [navbarText, setNavbarText] = useState(false)\n\n  return (\n    <>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar\n          <DocsLink name=\"CNavbar\"/>\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"sm\" color=\"info\" >\n            <CToggler inNavbar onClick={() => setIsOpen(!isOpen)}/>\n            <CNavbarBrand>\n              NavbarBrand\n            </CNavbarBrand>\n            <CCollapse show={isOpen} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n              </CNavbarNav>\n              <CNavbarNav className=\"ml-auto\">\n                <CForm inline>\n                  <CInput\n                    className=\"mr-sm-2\"\n                    placeholder=\"Search\"\n                    size=\"sm\"\n                  />\n                  <CButton color=\"light\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n                </CForm>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar brand\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar color=\"faded\" light>\n            <CNavbarBrand>\n              <CImg\n                src=\"https://placekitten.com/g/30/30\"\n                className=\"d-inline-block align-top\"\n                alt=\"CoreuiVue\"\n              />\n              CoreUI React\n            </CNavbarBrand>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar text\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar toggleable=\"sm\" light color=\"light\">\n            <CToggler\n              inNavbar\n              onClick={()=>{ setNavbarText(!navbarText)}}\n            />\n            <CNavbarBrand>NavbarBrand</CNavbarBrand>\n            <CCollapse show={navbarText}>\n              <CNavbarNav>\n                <CNavbarText>Navbar text</CNavbarText>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar dropdown\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"false\" color=\"primary\" >\n            <CToggler inNavbar onClick={()=>{setIsOpenDropdown(!isOpenDropdown)}} />\n            <CCollapse show={isOpenDropdown} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar form\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Search\"\n                size=\"sm\"\n              />\n              <CButton color=\"outline-success\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar input group\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Username\"\n              />\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default CNavbars\n"],"sourceRoot":""}