{"version":3,"sources":["reusable/DocsLink.js","views/base/navbars/Navbars.js"],"names":["DocsLink","props","name","text","rest","href","concat","_jsx","className","children","CLink","rel","target","React","memo","CNavbars","isOpen","setIsOpen","useState","isOpenDropdown","setIsOpenDropdown","navbarText","setNavbarText","_jsxs","_Fragment","CCard","CCardHeader","CCardBody","CNavbar","expandable","color","CToggler","inNavbar","onClick","CNavbarBrand","CCollapse","show","navbar","CNavbarNav","CNavLink","CForm","inline","CInput","placeholder","size","CButton","type","CDropdown","inNav","CDropdownToggle","CDropdownMenu","CDropdownItem","light","CImg","src","alt","toggleable","CNavbarText"],"mappings":"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","file":"static/js/50.49ad0162.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNavbar,\n  CNavbarNav,\n  CNavbarBrand,\n  CNavbarText,\n  CToggler,\n  CNavLink,\n  CDropdown,\n  CForm,\n  CInput,\n  CButton,\n  CImg\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst CNavbars = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false)\n  const [navbarText, setNavbarText] = useState(false)\n\n  return (\n    <>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar\n          <DocsLink name=\"CNavbar\"/>\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"sm\" color=\"info\" >\n            <CToggler inNavbar onClick={() => setIsOpen(!isOpen)}/>\n            <CNavbarBrand>\n              NavbarBrand\n            </CNavbarBrand>\n            <CCollapse show={isOpen} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n              </CNavbarNav>\n              <CNavbarNav className=\"ml-auto\">\n                <CForm inline>\n                  <CInput\n                    className=\"mr-sm-2\"\n                    placeholder=\"Search\"\n                    size=\"sm\"\n                  />\n                  <CButton color=\"light\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n                </CForm>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar brand\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar color=\"faded\" light>\n            <CNavbarBrand>\n              <CImg\n                src=\"https://placekitten.com/g/30/30\"\n                className=\"d-inline-block align-top\"\n                alt=\"CoreuiVue\"\n              />\n              CoreUI React\n            </CNavbarBrand>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar text\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar toggleable=\"sm\" light color=\"light\">\n            <CToggler\n              inNavbar\n              onClick={()=>{ setNavbarText(!navbarText)}}\n            />\n            <CNavbarBrand>NavbarBrand</CNavbarBrand>\n            <CCollapse show={navbarText}>\n              <CNavbarNav>\n                <CNavbarText>Navbar text</CNavbarText>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar dropdown\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"false\" color=\"primary\" >\n            <CToggler inNavbar onClick={()=>{setIsOpenDropdown(!isOpenDropdown)}} />\n            <CCollapse show={isOpenDropdown} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar form\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Search\"\n                size=\"sm\"\n              />\n              <CButton color=\"outline-success\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar input group\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Username\"\n              />\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default CNavbars\n"],"sourceRoot":""}