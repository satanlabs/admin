{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","views/expenses/Brand.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","copyStringToClipboard","someStr","navigator","clipboard","writeText","findCostPer","quantity","amount","perQuantity","final","concat","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","Component","render","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","FailureModal","ModalFooter","Button","onClick","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","FILE_NAME","initialState","isLoaded","loadingModalVisible","failureModalVisible","brandListData","tableColumnData","accessorKey","header","enableEditing","Cell","_ref","renderedCellValue","row","moment","zone","format","_ref2","Brand","constructor","super","submitCreateBrandForm","event","preventDefault","reqData","name","target","inputName","value","holdingCompany","inputHoldingCompany","officialBrandLink","inputOfficialBrandLink","setState","callCreateBrandApi","state","JSON","parse","stringify","resetStateToDefault","reloadData","fetchBrandDataList","componentDidMount","document","title","API_URL","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","Error","code","error","handleSaveRowEdits","exitEditingMode","callBrandUpdateApi","values","newBrand","CButton","MaterialReactTable","density","columns","enablePagination","editingMode","onEditingRowSave","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroup","CInputGroupPrepend","CInputGroupText","CIcon","CInput","placeholder","autoComplete","type","step","label","required","xs"],"mappings":"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","file":"static/js/25.79ab5244.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // if(localStorage.logsEnabled !== 'true') \n    //     return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nconst copyStringToClipboard = (someStr) => {\n    //console.log('copyStringToClipboard() : someStr = ', someStr);\n    // alert('clipboard added = ' + someStr);\n    navigator.clipboard.writeText(someStr);\n}\n\nconst findCostPer = (quantity, amount, perQuantity) => {\n    const final = ( amount / quantity ) * perQuantity;\n    console.log(`quantity = ${quantity}, amount = ${amount}, perQuantity = ${perQuantity}, final = ${final}`);\n    return final;\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById,\n    copyStringToClipboard,\n    findCostPer\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","import React, { Component, useMemo } from 'react';\nimport moment from 'moment';\nimport { requestHeaderGETWithAuth, requestHeaderPUTWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, getSearchResult, openPageInNewTab, reloadPage, goHome } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport Table from 'react-bootstrap/Table';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,\n    CTextarea\n  } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport { brandSet } from '@coreui/icons';\nimport MaterialReactTable from 'material-react-table';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\n\n//default\nconst FILE_NAME = \"Brand.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    brandListData: []\n};\n\nconst tableColumnData = [\n    {\n        accessorKey: 'id',\n        header: 'ID',\n        enableEditing: false,\n    },\n    {\n        accessorKey: 'name',\n        header: 'Name',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'holdingCompany',\n        header: 'Holding Company',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'officialBrandLink',\n        header: 'Official Brand Link',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'createdAt',\n        header: 'Created At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n    {\n        accessorKey: 'updatedAt',\n        header: 'Updated At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n];\n\nclass Brand extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchBrandDataList();\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Expenses - Brand\";\n        this.fetchBrandDataList();\n    }\n\n    fetchBrandDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/brand/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchBrandDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        isLoaded: true,\n                        brandListData: result.data\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchBrandDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n    \n    handleSaveRowEdits(exitEditingMode) {\n        Logger(FILE_NAME, \"handleSaveRowEdits\", \"\", \"exitEditingMode\", exitEditingMode);\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n        this.callBrandUpdateApi(exitEditingMode);\n    }\n\n    callBrandUpdateApi(exitEditingMode) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/brand/update';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderPUTWithAuth(JSON.stringify(exitEditingMode.values), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callBrandUpdateApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n\n                    setTimeout(() => {\n                        this.setState({\n                            loadingModalVisible: false,\n                            loadingModalState: 0\n                        });\n                        exitEditingMode.exitEditingMode();\n                        this.reloadData();\n                    }, 500);\n                    \n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callBrandUpdateApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n\n    }\n\n    submitCreateBrandForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            name: event.target.inputName.value,\n            holdingCompany: event.target.inputHoldingCompany.value,\n            officialBrandLink: event.target.inputOfficialBrandLink.value\n        };\n\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n\n        this.callCreateBrandApi(reqData);\n    }\n\n    callCreateBrandApi(newBrand) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/brand/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newBrand), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"submitCreateBrandForm\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"submitCreateBrandForm\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (            \n                this.state.isLoaded ? \n                <div>\n                    <h1>BRAND &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                        <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                    </h1>\n                    <br />\n\n                    {\n                    this.state.isLoaded ?\n                        <MaterialReactTable\n                            initialState={{ density: 'compact' }}\n                            columns={tableColumnData} \n                            data={this.state.brandListData}\n                            enablePagination = {true}\n\n                            editingMode={\"row\"}\n                            enableEditing\n                            onEditingRowSave={(exitEditingMode) => this.handleSaveRowEdits(exitEditingMode)}\n                        /> : <br/>\n                    }\n                    <br /><br />\n                    {\n                        /* Create new brand */\n                        <CContainer>\n                        <CRow className=\"justify-content-center\">\n                        <CCol md=\"8\">\n                            <CCardGroup>\n                            <CCard className=\"p-4\">\n                                <CCardBody>\n                                <CForm onSubmit={this.submitCreateBrandForm}>\n                                    <h1>Save a new brand</h1>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupPrepend>\n                                            <CInputGroupText>\n                                            <CIcon name=\"cilPencil\" />\n                                            </CInputGroupText>\n                                        </CInputGroupPrepend>\n                                        <CInput\n                                            placeholder=\"Brand Name\" \n                                            autoComplete=\"on\"\n                                            type=\"text\"\n                                            step=\"any\"\n                                            id=\"inputName\"\n                                            label=\"Brand Name\"\n                                            required\n                                        />\n                                    </CInputGroup>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupPrepend>\n                                            <CInputGroupText>\n                                            <CIcon name=\"cilPencil\" />\n                                            </CInputGroupText>\n                                        </CInputGroupPrepend>\n                                        <CInput\n                                            placeholder=\"Holding company\" \n                                            autoComplete=\"on\"\n                                            type=\"text\"\n                                            step=\"any\"\n                                            id=\"inputHoldingCompany\"\n                                            label=\"Holding company\"\n                                            required\n                                        />\n                                    </CInputGroup>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupPrepend>\n                                            <CInputGroupText>\n                                            <CIcon name=\"cilPencil\" />\n                                            </CInputGroupText>\n                                        </CInputGroupPrepend>\n                                        <CInput\n                                            placeholder=\"Official Brand Link\" \n                                            autoComplete=\"on\"\n                                            type=\"text\"\n                                            step=\"any\"\n                                            id=\"inputOfficialBrandLink\"\n                                            label=\"Official Brand Link\"\n                                            required\n                                        />\n                                    </CInputGroup>\n                                    \n\n                                    <CRow>\n                                        <CCol xs=\"6\">\n                                            <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                        </CCol>\n                                        <CCol xs=\"6\" className=\"text-right\">\n                                            <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                        </CCol>\n                                    </CRow>\n                                </CForm>\n                                </CCardBody>\n                            </CCard>\n                            </CCardGroup>\n                        </CCol>\n                        </CRow>\n                        </CContainer>      \n                    }\n\n                    {/* //default */}\n                    <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                    <FailureModal visible={this.state.failureModalVisible} />\n                </div>\n                : <Loading />\n        );\n    }\n}\n\nexport default Brand;\n"],"sourceRoot":""}