{"version":3,"sources":["views/expenses/Product.js","views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","Utils/Enums.js"],"names":["FILE_NAME","initialState","isLoaded","loadingModalVisible","loadingModalState","failureModalVisible","categoryListData","brandListData","productListData","categoryListDataSelectTagSpecific","brandListDataSelectTagSpecific","newProductData","categoryId","brandId","tableColumnData","accessorKey","header","enableEditing","Cell","_ref","renderedCellValue","row","_ref2","_ref3","moment","zone","format","_ref4","Product","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","submitCreateProductForm","event","preventDefault","reqData","name","target","inputName","value","doesStateContainAllRequiredProductParams","state","setState","callCreateProductApi","alert","JSON","parse","stringify","_createClass","key","this","resetStateToDefault","fetchCategoryDataList","document","title","_this2","API_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","userData","getUserDataFromLocalStorage","fetch","requestHeaderGETWithAuth","authToken","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","reloadPage","Error","result","Logger","code","data","map","element","id","label","fetchBrandDataList","error","_this3","fetchProductDataList","_this4","newProduct","_this5","requestHeaderPOSTWithAuth","reloadData","_this6","_jsxs","children","_jsx","CButton","color","className","onClick","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroup","CInputGroupPrepend","CInputGroupText","CIcon","CInput","placeholder","autoComplete","type","step","required","Select","onChange","choice","options","CRow","xs","MaterialReactTable","density","columns","enablePagination","editingMode","onEditingRowSave","exitEditingMode","handleSaveRowEdits","StatusModal","visible","FailureModal","Loading","Component","Failure","style","fontSize","detailShow","role","Success","__DOUBLE_COLON__","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","fileName","methodName","message","variableName","variableValue","logData","console","log","goBack","history","back","goHome","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","body","requestHeaderFilePOST","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","apply","basic","Modal","isOpen","backdrop","ModalBody","ModalFooter","Button","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","unitOfMeasurementsList","categoryTypesList","commodityTypesList","yesAndNoList","backendValue","paymentInstrumentsList","paymentBanksList","expenseModesList"],"mappings":"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","file":"static/js/22.656ea81b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { requestHeaderDELETEWithAuth, requestHeaderGETWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, getSearchResult, openPageInNewTab, reloadPage, goHome } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport Table from 'react-bootstrap/Table';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,\n    CTextarea\n  } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport { brandSet } from '@coreui/icons';\nimport MaterialReactTable from 'material-react-table';\nimport Select from 'react-select';\nimport { yesAndNoList } from 'src/Utils/Enums';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\n\n//default\nconst FILE_NAME = \"Product.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    categoryListData: [],\n    brandListData: [],\n    productListData: [],\n    categoryListDataSelectTagSpecific: [],\n    brandListDataSelectTagSpecific: [],\n    newProductData: {\n        categoryId: null,\n        brandId: null\n    }\n};\n\nconst tableColumnData = [\n    {\n        accessorKey: 'id',\n        header: 'ID',\n        enableEditing: false,\n    },\n    {\n        accessorKey: 'name',\n        header: 'name',\n        enableEditing: true,\n    },\n    {\n        accessorKey: 'categoryId',\n        header: 'categoryId',\n        enableEditing: true,\n        Cell: ({ renderedCellValue, row }) => (renderedCellValue === null ? \"N/A\" : renderedCellValue)\n    },\n    {\n        accessorKey: 'brandId',\n        header: 'brandId',\n        enableEditing: true,\n        Cell: ({ renderedCellValue, row }) => (renderedCellValue === null ? \"N/A\" : renderedCellValue)\n    },\n    \n    \n    {\n        accessorKey: 'createdAt',\n        header: 'Created At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n    {\n        accessorKey: 'updatedAt',\n        header: 'Updated At',\n        enableEditing: false,\n        Cell: ({ renderedCellValue, row }) => (moment(renderedCellValue).zone('IST').format('YYYY/MM/DD HH:mm:ss ddd'))\n    },\n];\n\n\nclass Product extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchCategoryDataList();\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Satanlabs - expenses - Product page\";\n        this.fetchCategoryDataList();\n    }\n\n    fetchCategoryDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/category/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const categoryListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        categoryListData: result.data,\n                        categoryListDataSelectTagSpecific\n                    });\n                    this.fetchBrandDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchBrandDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/brand/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchBrandDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const brandListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        brandListData: result.data,\n                        brandListDataSelectTagSpecific\n                    });\n                    this.fetchProductDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchBrandDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchProductDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/product/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        isLoaded: true,\n                        productListData: result.data\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    submitCreateProductForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            name: event.target.inputName.value\n        };\n\n        if(this.doesStateContainAllRequiredProductParams() === false) {\n            alert(\"Please fill all unfilled items in the form\");\n            return;\n        }\n        reqData.categoryId = this.state.newProductData.categoryId;\n        reqData.brandId = this.state.newProductData.brandId;\n\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n\n        this.callCreateProductApi(reqData);\n    }\n\n    doesStateContainAllRequiredProductParams() {\n        return (this.state.newProductData.categoryId !== null && this.state.newProductData.brandId !== null);\n    }\n\n    callCreateProductApi(newProduct) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/product/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newProduct), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callCreateProductApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callCreateProductApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (\n            this.state.isLoaded ? \n            <div>\n                <h1>PRODUCT &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                    <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                </h1>\n                <br />\n\n                {\n                /* Create new product */\n                <CCol md=\"5\">\n                    <CCardGroup>\n                    <CCard className=\"p-4\">\n                        <CCardBody>\n                        <CForm onSubmit={this.submitCreateProductForm}>\n                            <h1>Save a new Product</h1>\n                            <CInputGroup className=\"mb-3\">\n                                <CInputGroupPrepend>\n                                    <CInputGroupText>\n                                    <CIcon name=\"cilPencil\" />\n                                    </CInputGroupText>\n                                </CInputGroupPrepend>\n                                <CInput\n                                    placeholder=\"Product Name\" \n                                    autoComplete=\"on\"\n                                    type=\"text\"\n                                    step=\"any\"\n                                    id=\"inputName\"\n                                    label=\"Product Name\"\n                                    required\n                                />\n                            </CInputGroup>\n\n                            <CIcon name=\"cilPencil\" /> <b>Category :</b>\n                            <br />\n                            <Select \n                                onChange={(choice) => {\n                                    const newProductData = this.state.newProductData;\n                                    newProductData.categoryId = choice.value;\n                                    this.setState({\n                                        newProductData\n                                    });\n                                }}\n                                options={this.state.categoryListDataSelectTagSpecific}\n                            />\n                            <br />\n\n                            <CIcon name=\"cilPencil\" /> <b>Brand :</b>\n                            <br />\n                            <Select \n                                onChange={(choice) => {\n                                    const newProductData = this.state.newProductData;\n                                    newProductData.brandId = choice.value;\n                                    this.setState({\n                                        newProductData\n                                    });\n                                }}\n                                options={this.state.brandListDataSelectTagSpecific}\n                            />\n                            <br />\n\n                            <CRow>\n                                <CCol xs=\"6\">\n                                    <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                </CCol>\n                                <CCol xs=\"6\" className=\"text-right\">\n                                    <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                </CCol>\n                            </CRow>\n                        </CForm>\n                        </CCardBody>\n                    </CCard>\n                    </CCardGroup>\n                </CCol>    \n                }\n\n                <br /><br />\n\n                {\n                this.state.isLoaded ?\n                    <MaterialReactTable\n                        initialState={{ density: 'compact' }}\n                        columns={tableColumnData} \n                        data={this.state.productListData}\n                        enablePagination = {true}\n\n                        editingMode={\"row\"}\n                        enableEditing\n                        onEditingRowSave={(exitEditingMode) => this.handleSaveRowEdits(exitEditingMode)}\n                    /> : <br/>\n                }\n\n                {/* //default */}\n                <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                <FailureModal visible={this.state.failureModalVisible} />\n            </div>\n            : <Loading />\n        );\n    }\n}\n\nexport default Product;\n","import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty\n}","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","/* Contains all the enums */\n\nconst fileTypeArray = [\n    {\n        id: 1,\n        commonName: \"pdf\",\n        shortForm: \"PDF\",\n        fullForm: \"Portable Document Format\"\n    },\n    {\n        id: 2,\n        commonName: \"xls\",\n        shortForm: \"XLS\",\n        fullForm: \"Microsoft Excel file\"\n    },\n    {\n        id: 3,\n        commonName: \"csv\",\n        shortForm: \"CSV\",\n        fullForm: \"Comma-Separated Values\"\n    }\n];\n\nconst getFileTypeById = (id) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.id == id;\n    })\n};\nconst getFileTypeByName = (name) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.name == name;\n    })\n};\n\n\n/* EXPENSE related enums */\n\n\nconst unitOfMeasurementsList = [\n    {\n        value:\"MILLILITER\",\n        label: \"MILLILITER 💧\"\n    },\n    {\n        value:\"GRAM\",\n        label: \"GRAM 🍎\"\n    },\n    {\n        value:\"COUNT\",\n        label: \"COUNT 🥚\"\n    }\n];\n\nconst categoryTypesList = [\n    {\n        value:\"ON_DEMAND\",\n        label: \"ON_DEMAND\"\n    },\n    {\n        value:\"BILL\",\n        label: \"BILL\"\n    }\n];\n\nconst commodityTypesList = [\n    {\n        value:\"PRODUCT\",\n        label: \"PRODUCT 🍎\"\n    },\n    {\n        value:\"SERVICE\",\n        label: \"SERVICE\"\n    }\n];\n\nconst yesAndNoList = [\n    {\n        value:\"YES\",\n        label: \"YES ✅\",\n        backendValue: true\n    },\n    {\n        value:\"NO\",\n        label: \"NO ❌\",\n        backendValue: false\n    }\n];\n\nconst paymentInstrumentsList = [\n    {\n        value:\"UPI\",\n        label: \"UPI 🇮🇳 🧾\"\n    },\n    {\n        value:\"NET_BANKING\",\n        label: \"NET_BANKING 🔗\"\n    },\n    {\n        value:\"CREDIT_CARD\",\n        label: \"CREDIT_CARD 💳\"\n    },\n    {\n        value:\"CASH\",\n        label: \"CASH 💰 💵\"\n    },\n];\n\n\nconst paymentBanksList = [\n    {\n        value:\"SBI\",\n        label: \"SBI\"\n    },\n    {\n        value:\"AXIS\",\n        label: \"AXIS\"\n    },\n];\n\nconst expenseModesList  = [\n    {\n        value:\"ONLINE\",\n        label: \"ONLINE 🔗\"\n    },\n    {\n        value:\"STORE_BOUGHT\",\n        label: \"STORE_BOUGHT 🏪\"\n    },\n];\n\nexport {\n    fileTypeArray,\n    getFileTypeById,\n    getFileTypeByName,\n\n    unitOfMeasurementsList,\n    categoryTypesList,\n    commodityTypesList,\n    yesAndNoList,\n\n    paymentInstrumentsList,\n    paymentBanksList,\n    expenseModesList\n\n};\n"],"sourceRoot":""}