{"version":3,"sources":["views/Statuses/Statuses.js","Utils/Utils.js","Rest-API/Header.js","views/Modals/StatusModal.js","views/Modals/FailureModal.js","Rest-API/EnvironmentSpecificThings.js","Utils/Enums.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/extends.js","views/expenses/ItemInputForm.js","views/BasicRepetitiveComponents/FormRelated.js","views/expenses/ExpenseCreate.js"],"names":["Failure","props","_jsxs","className","children","_jsx","style","color","fontSize","detailShow","Loading","role","Success","__DOUBLE_COLON__","reloadPage","window","location","reload","openPageInNewTab","url","open","getSearchResult","tmkocAllEpisodes","searchString","searchPositiveEpisodes","forEach","episode","checkIfStringContainsPattern","shortDesc","push","string","pattern","toUpperCase","includes","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","round","toFixed","Logger","fileName","methodName","message","variableName","variableValue","localStorage","logsEnabled","logData","console","log","goBack","history","back","goHome","filterById","jsonObject","id","result","filter","copyStringToClipboard","someStr","navigator","clipboard","writeText","CONTENT_TYPE_JSON_STRING","requestHeaderGET","method","headers","requestHeaderPOST","data","body","requestHeaderFilePOST","requestHeaderGETWithAuth","authToken","requestHeaderPOSTWithAuth","requestHeaderPUTWithAuth","requestHeaderDELETEWithAuth","StatusModal","Component","render","basic","this","loadingModalState","Modal","isOpen","visible","backdrop","ModalBody","FailureModal","ModalFooter","Button","onClick","BACKEND_AUTH_APP_BASE_URL","BACKEND_WEIGHT_SERVICE_BASE_URL","BACKEND_PRICE_TRACKER_SERVICE_BASE_URL","unitOfMeasurementsList","value","label","categoryTypesList","commodityTypesList","yesAndNoList","backendValue","paymentInstrumentsList","paymentBanksList","expenseModesList","_taggedTemplateLiteral","e","t","slice","Object","freeze","defineProperties","raw","_extends","module","exports","assign","bind","n","hasOwnProperty","call","__esModule","apply","FILE_NAME","initialState","isLoaded","unitOfMeasurement","ItemInputForm","constructor","super","state","JSON","parse","stringify","componentDidMount","borderStyle","borderColor","padding","margin","CIcon","size","name","itemIndex","CTooltip","content","float","confirm","onItemDeletion","Select","onChange","choice","onProductNameSelection","setState","options","productListDataSelectTagSpecific","placeholder","isClearable","CInputGroup","CInput","autoComplete","type","step","required","find","MANDATORY_DENOTER_RED_STAR","loadingModalVisible","failureModalVisible","locationListData","locationListDataSelectTagSpecific","storeListData","storeListDataSelectTagSpecific","categoryListData","productListData","dynamicItemList","newExpenseData","storeId","locationId","paymentInstrument","paymentBank","mode","ExpenseCreate","addMoreItemInputForm","tempDynamicItemList","productId","index","submitCreateExpenseForm","event","preventDefault","reqData","dateAndTimeOfPurchase","target","inputDateOfPurchase","inputTimeOfPurchase","extraNotes","inputExtraNotes","tags","inputTags","payment","totalAmount","inputTotalAmount","validationResult","doesStateContainAllRequiredExpenseParams","alert","bank","itemsDataList","element","quantity","document","getElementById","amount","items","callCreateExpenseApi","title","fetchLocationDataList","resetStateToDefault","reloadData","API_URL","userData","getUserDataFromLocalStorage","fetch","then","response","status","json","setTimeout","logoutProcedureForLocalStorage","Error","code","map","fetchStoreDataList","error","fetchCategoryDataList","fetchProductDataList","product","category","categoryId","reloadSupportingData","newExpense","CButton","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroupPrepend","CInputGroupText","defaultValue","moment","format","item","CTextarea","rows","xs"],"mappings":"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","file":"static/js/14.a1a1ad7c.chunk.js","sourcesContent":["import React from 'react';\nimport { CSpinner } from '@coreui/react';\n\nconst Failure = (props) =>\n    <div className=\"animated fadeIn pt-3 text-center text-danger\">\n      <i className=\"fa fa-warning\" style={{ color: \"red\", fontSize: \"40px\" }} />\n      <h2>We're Sorry.</h2>\n      {\n        (props.detailShow) && (\n            <div>\n              An Error has occurred, please refresh / reload the page.<br/>\n            </div>\n        )\n      }\n    </div >\n    ;\n\nconst Loading = () =>\n    <div className=\"animated fadeIn text-center\">\n        <br />\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n        </div><br />\n        <div className=\"text-primary\">L O A D I N G</div>\n        {/* \n        <CSpinner color=\"primary\" size=\"sm\"/>\n        <div className=\"text-primary\">🚀 🚀 🚀 Please wait. ⌛ ⌛ ⌛</div>\n         */}\n        <br />\n    </div>\n    ;\n\nconst Success = () =>\n    <div className=\"animated fadeIn pt-3 text-center\">\n        <h1 className=\"spinner-grow text-success\" >\n        </h1>\n        <p className=\"text-success\">S U C C E S S</p>\n    </div>\n    ;\n\nexport {\n  Failure,\n  Loading,\n  Success\n};\n","const __SPACE__ = \" \";\nconst __BRACKET_PAIR__ = \"() \";\nconst __DOUBLE_COLON__ = \" : \";\nconst __CALLED__ = \"called\";\nconst __HYPHEN__ = \" - \";\n\nconst reloadPage = () => {\n    window.location.reload();\n};\n\n\nconst openPageInNewTab = (url) => {\n    window.open(url, \"_blank\");\n}\n\nconst getSearchResult = (tmkocAllEpisodes, searchString) => {\n    let searchPositiveEpisodes = [];\n\n    tmkocAllEpisodes.forEach((episode) => {\n        if (checkIfStringContainsPattern(episode.episode, searchString)) { searchPositiveEpisodes.push(episode); }\n        else if (checkIfStringContainsPattern(episode.shortDesc, searchString)) { searchPositiveEpisodes.push(episode); }\n\n    });\n\n    return searchPositiveEpisodes;\n\n}\n\nconst checkIfStringContainsPattern = (string, pattern) => {\n    string += \"\";\n    pattern += \"\";\n    string = string.toUpperCase();\n    pattern = pattern.toUpperCase();\n\n    return string.includes(pattern);\n}\n\nfunction humanFileSize(bytes, si=true, dp=1) {\n    const thresh = si ? 1000 : 1024;\n  \n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n  \n    const units = si \n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10**dp;\n  \n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n\n//logger 1.0\nconst Logger = (fileName, methodName, message = undefined, variableName = undefined, variableValue = undefined) => {\n    if(localStorage.logsEnabled !== 'true') \n        return;\n    \n    // File.js - callApi() called : some_message : userName :  apple_cat\n    let logData = fileName + __HYPHEN__ + methodName + __BRACKET_PAIR__ + __CALLED__ + __DOUBLE_COLON__;\n\n    (message) && (logData += (message + __DOUBLE_COLON__));\n\n    if (variableName) {\n        logData += (variableName + __DOUBLE_COLON__);\n        console.log(logData, variableValue);\n    }\n    else {\n        console.log(logData);\n    }\n}\n\nconst goBack = () => {\n    window.history.back();\n}\n\nconst goHome = () => {\n    window.open(\"/\" ,\"_self\");\n}\n\nconst isNullOrEmpty = (someString) => {\n    return (someString === null || someString.length < 0);\n}\n\nconst filterById = (jsonObject, id) => {\n    const result = jsonObject.filter(\n        jsonObject => (jsonObject['id'] == id)\n    );\n    return (result.length == 0) ? null : result[0];\n}\n\nconst copyStringToClipboard = (someStr) => {\n    //console.log('copyStringToClipboard() : someStr = ', someStr);\n    // alert('clipboard added = ' + someStr);\n    navigator.clipboard.writeText(someStr);\n}\n\nexport {\n    reloadPage,\n    getSearchResult,\n    openPageInNewTab,\n    humanFileSize,\n    Logger,\n    goBack,\n    goHome,\n    isNullOrEmpty,\n    filterById,\n    copyStringToClipboard\n}\n","const CONTENT_TYPE_JSON_STRING = \"application/json\";\n\nconst requestHeaderGET = () => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n            }\n        }\n    )\n};\n\nconst requestHeaderPOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderFilePOST = (data) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n            },\n            body: data\n        }\n    )\n};\n\n//========== WITH AUTH HEADER ==========\n\nconst requestHeaderGETWithAuth = (authToken) => {\n    return (\n        {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": authToken\n            }\n        }\n    )\n};\n\nconst requestHeaderPOSTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderPUTWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\nconst requestHeaderDELETEWithAuth = (data, authToken) => {\n    return (\n        {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": CONTENT_TYPE_JSON_STRING,\n                \"Authorization\": authToken\n            },\n            body: data\n        }\n    )\n};\n\n\nexport {\n    requestHeaderGET,\n    requestHeaderPOST,\n    requestHeaderFilePOST,\n\n    requestHeaderGETWithAuth,\n    requestHeaderPOSTWithAuth,\n    requestHeaderPUTWithAuth,\n    requestHeaderDELETEWithAuth\n };","import React, { Component } from 'react';\nimport { Modal, ModalBody} from 'reactstrap';\nimport { Failure, Loading, Success } from '../Statuses/Statuses';\n\n//props : visible , toggleVisibility , loadingModalState\n\nclass StatusModal extends Component {\n    render() {\n        let basic = <div></div>;\n        if (this.props.loadingModalState == 0) {\n        basic = <Loading />;\n        }\n        else if (this.props.loadingModalState == 1) {\n        basic = <Success />;\n        }\n        else {\n        basic = <Failure />;\n        }\n\n        return (\n        <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-primary'}>\n            <ModalBody>\n            <div className=\"animated fadeIn pt-3 text-center\">\n                {basic}\n            </div>\n            </ModalBody>\n        </Modal>\n        );\n    }\n}\n\nexport default StatusModal;","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport { goBack, goHome, reloadPage } from '../../Utils/Utils';\nimport { Failure } from '../Statuses/Statuses';\n\nclass FailureModal extends Component {\n    render() {\n        return(\n            <Modal isOpen={this.props.visible} backdrop={\"static\"} className={'modal-danger'}>\n            <ModalBody>\n              <div className=\"animated fadeIn pt-3 text-center\">\n                <Failure detailShow={true} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={goBack}>BACK</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\" onClick={reloadPage}>RELOAD</Button>\n              &nbsp;&nbsp;\n              <Button color=\"secondary\">LOGOUT</Button>\n              &nbsp;&nbsp;\n              <Button color=\"primary\" onClick={goHome}>HOME</Button>\n            </ModalFooter>\n          </Modal>\n      );\n    }\n}\n\nexport default FailureModal;\n","\n\nconst BACKEND_BASE_URL          = \"https://backend.satanlabs.com\";\nconst BACKEND_AUTH_APP_BASE_URL = \"https://backend.satanlabs.com/auth-chowkidar\";\nconst BACKEND_NEXUS_APP_BASE_URL = \"https://backend.satanlabs.com/nexus/\";\nconst BACKEND_WEIGHT_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/weight\";\nconst BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"https://backend.satanlabs.com/nexus/price_tracker\";\n//const BACKEND_PRICE_TRACKER_SERVICE_BASE_URL = \"http://localhost:7979/nexus/price_tracker\";\n\n\nexport {\n    BACKEND_AUTH_APP_BASE_URL,\n    BACKEND_WEIGHT_SERVICE_BASE_URL,\n    BACKEND_PRICE_TRACKER_SERVICE_BASE_URL\n}","/* Contains all the enums */\n\nconst fileTypeArray = [\n    {\n        id: 1,\n        commonName: \"pdf\",\n        shortForm: \"PDF\",\n        fullForm: \"Portable Document Format\"\n    },\n    {\n        id: 2,\n        commonName: \"xls\",\n        shortForm: \"XLS\",\n        fullForm: \"Microsoft Excel file\"\n    },\n    {\n        id: 3,\n        commonName: \"csv\",\n        shortForm: \"CSV\",\n        fullForm: \"Comma-Separated Values\"\n    }\n];\n\nconst getFileTypeById = (id) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.id == id;\n    })\n};\nconst getFileTypeByName = (name) => {\n    return fileTypeArray.find((fileType, index) => {\n        return fileType.name == name;\n    })\n};\n\n\n/* EXPENSE related enums */\n\n\nconst unitOfMeasurementsList = [\n    {\n        value:\"MILLILITER\",\n        label: \"MILLILITER 💧\"\n    },\n    {\n        value:\"GRAM\",\n        label: \"GRAM 🍎\"\n    },\n    {\n        value:\"COUNT\",\n        label: \"COUNT 🥚\"\n    }\n];\n\nconst categoryTypesList = [\n    {\n        value:\"ON_DEMAND\",\n        label: \"ON_DEMAND\"\n    },\n    {\n        value:\"BILL\",\n        label: \"BILL\"\n    }\n];\n\nconst commodityTypesList = [\n    {\n        value:\"PRODUCT\",\n        label: \"PRODUCT 🍎\"\n    },\n    {\n        value:\"SERVICE\",\n        label: \"SERVICE\"\n    }\n];\n\nconst yesAndNoList = [\n    {\n        value:\"YES\",\n        label: \"YES ✅\",\n        backendValue: true\n    },\n    {\n        value:\"NO\",\n        label: \"NO ❌\",\n        backendValue: false\n    }\n];\n\nconst paymentInstrumentsList = [\n    {\n        value:\"UPI\",\n        label: \"UPI 🇮🇳 🧾\"\n    },\n    {\n        value:\"NET_BANKING\",\n        label: \"NET BANKING 🔗\"\n    },\n    {\n        value:\"CREDIT_CARD\",\n        label: \"CREDIT CARD 💳 \"\n    },\n    {\n        value:\"DEBIT_CARD\",\n        label: \"DEBIT CARD 💳 🏧\"\n    },\n    {\n        value:\"CASH\",\n        label: \"CASH 💰 💵\"\n    },\n];\n\n\nconst paymentBanksList = [\n    {\n        value:\"SBI\",\n        label: \"SBI\"\n    },\n    {\n        value:\"AXIS\",\n        label: \"AXIS\"\n    },\n];\n\nconst expenseModesList  = [\n    {\n        value:\"ONLINE\",\n        label: \"ONLINE 🔗\"\n    },\n    {\n        value:\"STORE_BOUGHT\",\n        label: \"STORE_BOUGHT 🏪\"\n    },\n];\n\nexport {\n    fileTypeArray,\n    getFileTypeById,\n    getFileTypeByName,\n\n    unitOfMeasurementsList,\n    categoryTypesList,\n    commodityTypesList,\n    yesAndNoList,\n\n    paymentInstrumentsList,\n    paymentBanksList,\n    expenseModesList\n\n};\n","function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };","function _extends() {\n  return (module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React, { Component } from 'react';\nimport {CInput, CInputGroup, CTooltip} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport Select from 'react-select';\nimport { Logger } from 'src/Utils/Utils';\nimport { unitOfMeasurementsList } from 'src/Utils/Enums';\n\n//default\nconst FILE_NAME = \"ItemInputForm.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    unitOfMeasurement: null\n};\n\nconst propsItems = {\n    itemIndex: 'item',\n    onItemDeletion: 'function',\n    onProductNameSelection: 'function',\n    productListDataSelectTagSpecific: 'item'\n};\n\nclass ItemInputForm extends Component { //dynamic input form for `item-data`.\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    componentDidMount() {\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n        Logger(FILE_NAME, \"render\", \"\", \"this.props\", this.props);\n\n        return (\n            <div style={{\n                borderStyle:\"solid\",\n                borderColor:\"red\",\n                padding: \"10px 10px 10px 10px\",\n                margin: \"0px 0px 10px 0px\"\n            }}>\n                <h5><CIcon size='lg' name=\"cilMoney\" />&nbsp;&nbsp;Item #{this.props.itemIndex + 1} :\n                <CTooltip content='🗑️ Delete this item'>\n                    <span style={{float: 'right', borderStyle:'solid', borderColor:'black', padding: '3px'}} onClick={() => {\n                        if(window.confirm(\"Surely want to DELETE item #\" + (this.props.itemIndex + 1) + \" ?\"))\n                            this.props.onItemDeletion(this.props.itemIndex);\n                        }}>❌ 🗑️</span>\n                </CTooltip>\n                </h5>\n\n                <Select \n                    onChange={(choice) => {\n                        this.props.onProductNameSelection(choice, this.props.itemIndex);\n                        this.setState({\n                            unitOfMeasurement: (choice === null) ? null : choice.unitOfMeasurement\n                        });\n                    }}\n                    options={this.props.productListDataSelectTagSpecific}\n                    placeholder='Product name'\n                    isClearable={true}\n                />\n                <CInputGroup className=\"mb-3\">\n                    <CInput\n                        placeholder=\"Quantity\" \n                        autoComplete=\"on\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        id={\"inputItemQuantity_\" + this.props.itemIndex}\n                        label=\"Quantity\"\n                        required\n                    />&nbsp;&nbsp;\n                    <b>\n                        {(this.state.unitOfMeasurement === null) ? \"~\" \n                        : unitOfMeasurementsList.find(unitOfMeasurement => unitOfMeasurement.value === this.state.unitOfMeasurement).label \n                        }\n                    </b> &nbsp;&nbsp;\n                    <CInput\n                        placeholder=\"Amount\" \n                        autoComplete=\"on\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        id={\"inputItemAmount_\" + this.props.itemIndex}\n                        label=\"Amount\"\n                        required\n                    />&nbsp;&nbsp; <b>INR ₹</b> &nbsp;&nbsp;\n                </CInputGroup>\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default ItemInputForm;\n","import React from 'react';\n\n\nconst MANDATORY_DENOTER_RED_STAR = () => <b style={{color:'red'}}>*</b>;\n\nexport {\n    MANDATORY_DENOTER_RED_STAR\n}","import React, { Component } from 'react';\nimport { requestHeaderGETWithAuth, requestHeaderPOSTWithAuth } from 'src/Rest-API/Header';\nimport { getUserDataFromLocalStorage, logoutProcedureForLocalStorage } from 'src/Utils/AuthRelatedThings';\nimport { Logger, reloadPage, copyStringToClipboard } from '../../Utils/Utils';\nimport { Loading } from '../Statuses/Statuses';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,  \n    CTextarea} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport StatusModal from '../Modals/StatusModal';\nimport FailureModal from '../Modals/FailureModal';\nimport Select from 'react-select';\nimport { expenseModesList, paymentBanksList, paymentInstrumentsList, yesAndNoList } from 'src/Utils/Enums';\nimport ItemInputForm from './ItemInputForm';\nimport { BACKEND_PRICE_TRACKER_SERVICE_BASE_URL } from 'src/Rest-API/EnvironmentSpecificThings';\nimport moment from 'moment';\nimport { MANDATORY_DENOTER_RED_STAR } from '../BasicRepetitiveComponents/FormRelated';\n\n//default\nconst FILE_NAME = \"ExpenseCreate.js\";\n\n//default\nconst initialState = {\n    isLoaded: false,\n    loadingModalVisible: false,\n    loadingModalState: 0,\n    failureModalVisible: false,\n    locationListData: [],\n    locationListDataSelectTagSpecific: [],\n    storeListData: [],\n    storeListDataSelectTagSpecific: [],\n    categoryListData: [],\n    productListData: [],\n    productListDataSelectTagSpecific: [],\n\n    dynamicItemList: [],\n    newExpenseData: {\n        storeId: null,\n        locationId: null,\n        paymentInstrument: null,\n        paymentBank: null,\n        mode: null\n    }\n};\n\n\nclass ExpenseCreate extends Component {\n\n    //default\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(initialState));\n    }\n\n    //default\n    componentDidMount() {\n        document.title = \"Expenses - Create\";\n        this.fetchLocationDataList();\n    }\n\n    //default\n    resetStateToDefault() {\n        this.setState(JSON.parse(JSON.stringify(initialState)));\n    }\n\n    //default\n    reloadData() {\n        this.resetStateToDefault();\n        this.fetchLocationDataList();\n    }\n\n    fetchLocationDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/location/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const locationListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        locationListData: result.data,\n                        locationListDataSelectTagSpecific\n                    });\n                    this.fetchStoreDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchLocationDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchStoreDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/store/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const storeListDataSelectTagSpecific = result.data.map((element) => {\n                        return {\n                            value: element.id,\n                            label: element.name\n                        };\n                    });\n                    this.setState({\n                        storeListData: result.data,\n                        storeListDataSelectTagSpecific\n                    });\n                    this.fetchCategoryDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchStoreDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchCategoryDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/category/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        categoryListData: result.data\n                    });\n                    this.fetchProductDataList();\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchCategoryDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    fetchProductDataList() {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/product/list?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n\n        fetch(API_URL, requestHeaderGETWithAuth(userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    const productListDataSelectTagSpecific = result.data.map((product) => {\n                        return {\n                            value: product.id,\n                            label: product.name,\n                            unitOfMeasurement: this.state.categoryListData.find(category => category.id === product.categoryId).unitOfMeasurement\n                        };\n                    });\n                    this.setState({\n                        isLoaded: true,\n                        productListData: result.data,\n                        productListDataSelectTagSpecific\n                    });\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"fetchProductDataList\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    reloadSupportingData() {\n        this.setState({\n            locationListData: [],\n            locationListDataSelectTagSpecific: [],\n        });\n        this.fetchLocationDataList();\n    }\n\n    addMoreItemInputForm = () => {\n        const { dynamicItemList } = this.state;\n        let tempDynamicItemList = dynamicItemList;\n        tempDynamicItemList.push({\n            productId: null\n        });\n\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    };\n\n    onProductNameSelection = (choice, index) => {//index start from 0\n        console.log('onProductNameSelection() : choice = ', choice, \" itemIndex = \", index);\n        const { dynamicItemList } = this.state;\n        let tempDynamicItemList = dynamicItemList;\n        tempDynamicItemList[index].productId = (choice === null) ? null : choice.value;\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    }\n\n    onItemDeletion = (itemIndex) => {\n        return; // STILL WIP\n        console.log('onItemDeletion() : itemIndex = ', itemIndex);\n        this.setState({ dynamicItemList: [] });\n\n        let tempDynamicItemList = [];\n        for(let i = 0 ; i < this.state.dynamicItemList.length; i++) {\n            if(i !== itemIndex)\n                tempDynamicItemList.push(this.state.dynamicItemList[i]);\n        }\n        tempDynamicItemList.forEach(i => console.log(i));\n\n        this.setState({ dynamicItemList: tempDynamicItemList });\n    }\n\n    submitCreateExpenseForm = (event) => {\n        event.preventDefault();\n\n        let reqData = {\n            dateAndTimeOfPurchase: event.target.inputDateOfPurchase.value + \" \" + event.target.inputTimeOfPurchase.value,\n            extraNotes: event.target.inputExtraNotes.value,\n            tags: event.target.inputTags.value,\n            payment: {\n                totalAmount: event.target.inputTotalAmount.value\n            }\n        };\n\n        const validationResult = this.doesStateContainAllRequiredExpenseParams();\n        if(validationResult !== null) {\n            alert(validationResult + \" . ℹ️ Form validation failed.\");\n            return;\n        }\n        reqData.mode = this.state.newExpenseData.mode;\n        reqData.storeId = this.state.newExpenseData.storeId;\n        reqData.locationId = this.state.newExpenseData.locationId;\n        reqData.payment.paymentInstrument = this.state.newExpenseData.paymentInstrument;\n        reqData.payment.bank = this.state.newExpenseData.paymentBank;\n\n        const itemsDataList = [];\n        this.state.dynamicItemList.forEach((element, index) => {\n            itemsDataList.push({\n                productId: element.productId,\n                quantity: document.getElementById('inputItemQuantity_' + index).value,\n                amount: document.getElementById('inputItemAmount_' + index).value,\n            })\n        });\n        reqData.items = itemsDataList;\n\n        Logger(FILE_NAME, \"submitCreateExpenseForm\", \"\", \"reqData\", reqData);\n        this.setState({\n            loadingModalVisible: true,\n            loadingModalState: 0\n        });\n        this.callCreateExpenseApi(reqData);\n    }\n\n    doesStateContainAllRequiredExpenseParams() {\n        if(this.state.newExpenseData.paymentInstrument === null)\n            return \"Payment-Instrument NOT selected\";\n\n        if(this.state.newExpenseData.paymentInstrument !== paymentInstrumentsList[4].value &&\n            this.state.newExpenseData.paymentBank === null)\n            return \"Bank NOT selected, for NON-CASH payments\";\n        if(this.state.newExpenseData.mode === null)\n            return \"MODE NOT selected\";\n        if(this.state.newExpenseData.storeId === null)\n            return \"STORE not selected\";\n        if(this.state.newExpenseData.mode === \"ONLINE\" && this.state.newExpenseData.locationId === null)\n            return \"order-Location NOT selected for online order\";\n        if(this.state.dynamicItemList.length < 1)\n            return \"No item added in the expense\";\n\n        return null;\n    }\n\n    callCreateExpenseApi(newExpense) {\n        let API_URL = BACKEND_PRICE_TRACKER_SERVICE_BASE_URL + '/expense/save?offset=0&from=admin-portal';\n        const userData = getUserDataFromLocalStorage();\n        fetch(API_URL, requestHeaderPOSTWithAuth(JSON.stringify(newExpense), userData.authToken))\n        .then(response => {\n            if(response.status === 200)\n                return response.json();\n            if(response.status === 401) {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n                setTimeout(() => {\n                    logoutProcedureForLocalStorage();\n                    reloadPage();\n                }, 500);\n            } else {\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n            throw new Error(\"HTTP status is \" + response.status);\n        })\n        .then(\n            (result) => {\n                Logger(FILE_NAME, \"callCreateExpenseApi\", \"FETCH_1\", \"result\", result);\n                if(result.code === 1001) {\n                    //success\n                    this.setState({\n                        loadingModalState: 1,\n                    });\n                    setTimeout(() => {this.reloadData();}, 200);\n                } else {\n                    //something horrible happened\n                    this.setState({\n                        loadingModalVisible: false,\n                        loadingModalState: 0,\n                        failureModalVisible: true\n                    });\n                }\n            },\n            (error) => {\n                Logger(FILE_NAME, \"callCreateExpenseApi\", \"FETCH_1\", \"error\", error);\n                this.setState({\n                    loadingModalVisible: false,\n                    loadingModalState: 0,\n                    failureModalVisible: true\n                });\n            }\n        );\n    }\n\n    //default\n    render() {\n        //default\n        Logger(FILE_NAME, \"render\", \"\", \"this.state\", this.state);\n\n        return (            \n                this.state.isLoaded ? \n                <div>\n                    <h1>Create a new Expense \n                        <br />\n                        <div style={{\n                            borderStyle:\"solid\",\n                            borderColor:\"#ff9100\",\n                            padding: \"10px 10px 10px 10px\",\n                            margin: \"0px 0px 10px 0px\"\n                        }}>\n                            <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadData()}>Reload Data</CButton>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                            <CButton color=\"success\" className=\"px-4\" onClick={() => this.reloadSupportingData()}>Reload Supporting Data(background)</CButton>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                            <CButton color=\"danger\" className=\"px-4\" onClick={() => { window.open('./#/price_tracker/expense/view', '_self'); }}> 🔗 View expenses</CButton>\n                        </div>\n                    </h1>\n                    <br />\n\n                    {\n                    /* Create new Expense */\n                    <CContainer>\n                        <CRow className=\"justify-content-center\">\n                            <CCol md=\"8\">\n                                <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardBody>\n                                    <CForm onSubmit={this.submitCreateExpenseForm}>\n\n                                        <div style={{\n                                            borderStyle:\"solid\",\n                                            borderColor:\"blue\",\n                                            padding: \"10px 10px 10px 10px\",\n                                            margin: \"0px 0px 10px 0px\"\n                                        }}>\n                                            <h4><CIcon size='lg' name=\"cilCalendar\" />&nbsp;&nbsp; <u>Date and time of Purchase :</u> <MANDATORY_DENOTER_RED_STAR /></h4>\n                                            <p>⛔️ ℹ️ : <i>date format on UI is : DD/MM/YYYY</i></p>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CInputGroupPrepend>\n                                                    <CInputGroupText>\n                                                    <CIcon name=\"cilCalendar\" /> \n                                                    </CInputGroupText>\n                                                </CInputGroupPrepend>\n                                                <CInput\n                                                    placeholder=\"Date Of Purchase\" \n                                                    autoComplete=\"on\"\n                                                    type=\"date\"\n                                                    defaultValue={new moment().format('YYYY-MM-DD')} //2020-03-08\n                                                    step=\"any\"\n                                                    id=\"inputDateOfPurchase\"\n                                                    label=\"Date Of Purchase\"\n                                                    required\n                                                />\n                                                <CInput\n                                                    placeholder=\"Time Of Purchase\" \n                                                    autoComplete=\"on\"\n                                                    type=\"time\"\n                                                    step=\"any\"\n                                                    id=\"inputTimeOfPurchase\"\n                                                    label=\"Time Of Purchase\"\n                                                    required\n                                                />\n                                            </CInputGroup>\n                                        </div>\n\n                                        <div style={{\n                                            borderStyle:\"solid\",\n                                            borderColor:\"green\",\n                                            padding: \"10px 10px 10px 10px\",\n                                            margin: \"0px 0px 10px 0px\"\n                                        }}>\n                                            <h4><CIcon size='lg' name=\"cilDollar\" /><CIcon size='lg' name=\"cilEuro\" />&nbsp;&nbsp; <u>Payment related data :</u></h4>\n\n                                            <h5><CIcon size='lg' name=\"cibPaypal\" />&nbsp;&nbsp;Payment instrument : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <Select \n                                                onChange={(choice) => {\n                                                    const newExpenseData = this.state.newExpenseData;\n                                                    newExpenseData.paymentInstrument = (choice === null) ? null : choice.value;\n                                                    this.setState({\n                                                        newExpenseData\n                                                    });\n                                                }}\n                                                options={paymentInstrumentsList}\n                                                isClearable={true}\n                                            />\n                                            <br />\n\n                                            <h5><CIcon size='lg' name=\"cilBank\" />&nbsp;&nbsp;Bank : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <Select \n                                                onChange={(choice) => {\n                                                    const newExpenseData = this.state.newExpenseData;\n                                                    newExpenseData.paymentBank = (choice === null) ? null : choice.value;\n                                                    this.setState({\n                                                        newExpenseData\n                                                    });\n                                                }}\n                                                options={paymentBanksList}\n                                                isClearable={true}\n                                            />\n                                            <br />\n\n                                            <h5><CIcon size='lg' name=\"cilMoney\" />&nbsp;&nbsp;Total amount paid : <MANDATORY_DENOTER_RED_STAR /></h5>\n                                            <CInputGroup className=\"mb-3\">\n                                                \n                                                <CInput\n                                                    placeholder=\"Total amount\" \n                                                    autoComplete=\"on\"\n                                                    type=\"number\"\n                                                    step=\"0.01\"\n                                                    id=\"inputTotalAmount\"\n                                                    label=\"Total amount\"\n                                                    required\n                                                />\n                                            </CInputGroup>\n                                        </div>\n\n                                        <h4><CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Expense mode : <MANDATORY_DENOTER_RED_STAR /></h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.mode = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={expenseModesList}\n                                            isClearable={true}\n                                        />\n                                        <br />\n\n                                        <h4><CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Store : <MANDATORY_DENOTER_RED_STAR /></h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.storeId = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={this.state.storeListDataSelectTagSpecific}\n                                            isClearable={true}\n                                        />\n                                        <br />\n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilLocationPin\" />&nbsp;&nbsp; Location :\n                                            <h6>{(this.state.newExpenseData.mode === 'STORE_BOUGHT') ? \"⛔️ ℹ️ Not reqd. for store-bought items\" : \"\" } </h6>\n                                        </h4>\n                                        <Select \n                                            onChange={(choice) => {\n                                                const newExpenseData = this.state.newExpenseData;\n                                                newExpenseData.locationId = (choice === null) ? null : choice.value;\n                                                this.setState({\n                                                    newExpenseData\n                                                });\n                                            }}\n                                            options={this.state.locationListDataSelectTagSpecific}\n                                            isClearable={true}\n                                        />\n                                        <br />\n                                                                                \n                                        {\n                                            ['personal_arsh', 'for_ejipura_house']\n                                            .map((item, index) => {\n                                                return <span>\n                                                    <CButton color=\"danger\" className=\"px-0\" onClick={() => copyStringToClipboard(item)}>&nbsp;📋 {item}&nbsp;</CButton>\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                                                    </span>\n                                            })\n                                        }\n                                        \n                                        \n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilPencil\" />&nbsp;&nbsp; Notes : \n                                        </h4>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CInputGroupPrepend>\n                                                <CInputGroupText>\n                                                    <CIcon name=\"cilPencil\" />\n                                                </CInputGroupText>\n                                            </CInputGroupPrepend>\n                                            <CTextarea  \n                                                placeholder='Some extra notes 📝 (not-mandatory)' \n                                                id=\"inputExtraNotes\" \n                                                rows=\"3\"\n                                            />\n                                        </CInputGroup>\n\n                                        <h4>\n                                            <CIcon size='lg' name=\"cilTags\" />&nbsp;&nbsp; Tags :\n                                        </h4>\n                                        <CInput\n                                            placeholder=\"tags 🏷️ 🔖 (not-mandatory)\" \n                                            autoComplete=\"on\"\n                                            step=\"any\"\n                                            id=\"inputTags\"\n                                            label=\"expense-tags\"\n                                            required='false'\n                                        />\n                                        <br />\n\n                                        {/* dynamic items input-list */}\n                                        <div>\n                                        {\n                                        this.state.dynamicItemList.length >= 1 &&\n                                        this.state.dynamicItemList.map((item, index) => {\n                                            return (\n                                            <ItemInputForm \n                                                key={\"itemInputFormComponent_\" + index}\n                                                data={item}\n                                                {...this.props}\n                                                itemIndex={index} // starts from 0\n                                                productListDataSelectTagSpecific={this.state.productListDataSelectTagSpecific}\n                                                onProductNameSelection={this.onProductNameSelection}\n                                                onItemDeletion={this.onItemDeletion}\n                                            />\n                                            );\n                                        })}\n                                        </div>\n                                        <CButton color=\"info\" className=\"px-4\" onClick={this.addMoreItemInputForm}>Add item ➕ </CButton>\n                                        &nbsp;&nbsp;\n                                        <span><b>Current ITEM Count (Σ) = {this.state.dynamicItemList.length}</b></span>\n                                        <br /><br />\n\n                                        <CRow>\n                                            <CCol xs=\"6\">\n                                                <CButton color=\"success\" className=\"px-4\" type='submit'>SAVE</CButton>\n                                            </CCol>\n                                            <CCol xs=\"6\" className=\"text-right\">\n                                                <CButton color=\"danger\" className=\"px-0\" onClick={() => this.reloadData()}>&nbsp;Reset values&nbsp;</CButton>\n                                            </CCol>\n                                        </CRow>\n                                    </CForm>\n                                    </CCardBody>\n                                </CCard>\n                                </CCardGroup>\n                            </CCol>\n                        </CRow>\n                    </CContainer>   \n                    }\n\n                <br /><br />\n                    <StatusModal visible={this.state.loadingModalVisible} loadingModalState={this.state.loadingModalState} />\n                    <FailureModal visible={this.state.failureModalVisible} />\n                </div>\n                : <Loading />\n        );\n    }\n}\n\nexport default ExpenseCreate;\n\n"],"sourceRoot":""}